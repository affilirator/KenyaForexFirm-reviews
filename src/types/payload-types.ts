/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'user-profile': UserProfile;
    regulations: Regulation;
    platforms: Platform;
    'account-types': AccountType;
    instruments: Instrument;
    'newsletter-tags': NewsletterTag;
    subscribers: Subscriber;
    modules: Module;
    'payment-methods': PaymentMethod;
    resources: Resource;
    reviews: Review;
    'user-progress': UserProgress;
    'forex-traders': ForexTrader;
    'review-criteria': ReviewCriterion;
    'market-news': MarketNew;
    'trading-classes': TradingClass;
    'trading-strategies': TradingStrategy;
    'forex-instruments': ForexInstrument;
    signals: Signal;
    brokers: Broker;
    comments: Comment;
    courses: Course;
    lessons: Lesson;
    quizzes: Quiz;
    questions: Question;
    posts: Post;
    'blog-comments': BlogComment;
    'course-reviews': CourseReview;
    pages: Page;
    'trading-sessions': TradingSession;
    'error-logs': ErrorLog;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    subscribers: {
      subscriberTags: 'newsletter-tags';
    };
    'trading-classes': {
      relatedInstruments: 'forex-instruments';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'user-profile': UserProfileSelect<false> | UserProfileSelect<true>;
    regulations: RegulationsSelect<false> | RegulationsSelect<true>;
    platforms: PlatformsSelect<false> | PlatformsSelect<true>;
    'account-types': AccountTypesSelect<false> | AccountTypesSelect<true>;
    instruments: InstrumentsSelect<false> | InstrumentsSelect<true>;
    'newsletter-tags': NewsletterTagsSelect<false> | NewsletterTagsSelect<true>;
    subscribers: SubscribersSelect<false> | SubscribersSelect<true>;
    modules: ModulesSelect<false> | ModulesSelect<true>;
    'payment-methods': PaymentMethodsSelect<false> | PaymentMethodsSelect<true>;
    resources: ResourcesSelect<false> | ResourcesSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'user-progress': UserProgressSelect<false> | UserProgressSelect<true>;
    'forex-traders': ForexTradersSelect<false> | ForexTradersSelect<true>;
    'review-criteria': ReviewCriteriaSelect<false> | ReviewCriteriaSelect<true>;
    'market-news': MarketNewsSelect<false> | MarketNewsSelect<true>;
    'trading-classes': TradingClassesSelect<false> | TradingClassesSelect<true>;
    'trading-strategies': TradingStrategiesSelect<false> | TradingStrategiesSelect<true>;
    'forex-instruments': ForexInstrumentsSelect<false> | ForexInstrumentsSelect<true>;
    signals: SignalsSelect<false> | SignalsSelect<true>;
    brokers: BrokersSelect<false> | BrokersSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    lessons: LessonsSelect<false> | LessonsSelect<true>;
    quizzes: QuizzesSelect<false> | QuizzesSelect<true>;
    questions: QuestionsSelect<false> | QuestionsSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'blog-comments': BlogCommentsSelect<false> | BlogCommentsSelect<true>;
    'course-reviews': CourseReviewsSelect<false> | CourseReviewsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'trading-sessions': TradingSessionsSelect<false> | TradingSessionsSelect<true>;
    'error-logs': ErrorLogsSelect<false> | ErrorLogsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'site-config': SiteConfig;
    'traders-global': TradersGlobal;
    'fx-review-criteria': FxReviewCriterion;
  };
  globalsSelect: {
    'site-config': SiteConfigSelect<false> | SiteConfigSelect<true>;
    'traders-global': TradersGlobalSelect<false> | TradersGlobalSelect<true>;
    'fx-review-criteria': FxReviewCriteriaSelect<false> | FxReviewCriteriaSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  fullName?: string | null;
  username: string;
  profileUrl?: string | null;
  experienceLevel?: ('beginner' | 'intermediate' | 'advanced') | null;
  marketsTraded?: ('forex' | 'stocks' | 'crypto' | 'commodities' | 'indices')[] | null;
  bio?: string | null;
  image?: (string | null) | Media;
  capital?: number | null;
  riskTolerance?: ('low' | 'medium' | 'high') | null;
  goals?: string | null;
  signals?: (string | Signal)[] | null;
  role: ('admin' | 'member' | 'guest' | 'student' | 'instructor' | 'partner' | 'author')[];
  subscriptionPlan?: ('free' | 'premium') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "signals".
 */
export interface Signal {
  id: string;
  pair: string;
  type: 'BUY' | 'SELL';
  status: 'active' | 'closed-win' | 'closed-loss' | 'cancelled';
  tradeDetails: {
    entryPrice: number;
    stopLoss: number;
    takeProfit: number;
  };
  /**
   * Enter a positive number for a win, a negative number for a loss. Leave empty if active or cancelled.
   */
  pips?: number | null;
  notes?: string | null;
  createdBy: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-profile".
 */
export interface UserProfile {
  id: string;
  fullName: string;
  /**
   * Add tags like "Scalping", "Swing Trading", "Fundamental Analysis", "Risk Management".
   */
  expertise?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  user: string | User;
  /**
   * An inspiring and authoritative bio highlighting their expertise and trading philosophy.
   */
  bio?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "regulations".
 */
export interface Regulation {
  id: string;
  authority: string;
  licenseNumberTemplate?: string | null;
  protectionLevel?: ('high' | 'medium' | 'low') | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  website?: string | null;
  tier?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "platforms".
 */
export interface Platform {
  id: string;
  name: string;
  developer?: string | null;
  features?:
    | (
        | {
            description?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'chartingTools';
          }
        | {
            available?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mobileApp';
          }
        | {
            supported?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'eaSupport';
          }
      )[]
    | null;
  prosCons?:
    | (
        | {
            list?:
              | {
                  item?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pros';
          }
        | {
            list?:
              | {
                  item?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cons';
          }
      )[]
    | null;
  screenshots?: (string | Media)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "account-types".
 */
export interface AccountType {
  id: string;
  name: string;
  minDeposit?: number | null;
  leverage?: string | null;
  spreads?: string | null;
  commission?: number | null;
  swapFree?: boolean | null;
  details?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  rating?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instruments".
 */
export interface Instrument {
  id: string;
  category?: ('forex' | 'cfds' | 'stocks' | 'crypto' | 'commodities') | null;
  examples?:
    | {
        example?: string | null;
        id?: string | null;
      }[]
    | null;
  count?: number | null;
  marginRequirements?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-tags".
 */
export interface NewsletterTag {
  id: string;
  name: string;
  description?: string | null;
  /**
   * Subscribers associated with this tag.
   */
  subscribers?: (string | Subscriber)[] | null;
  /**
   * Where the subscription originated from (e.g., Popup, Footer, AI Mentor).
   */
  source?: string | null;
  status?: ('subscribed' | 'unsubscribed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscribers".
 */
export interface Subscriber {
  id: string;
  email: string;
  name?: string | null;
  /**
   * Where the subscription originated from (e.g., Popup, Footer, AI Mentor).
   */
  source?: string | null;
  /**
   * Tags associated with the subscriber.
   */
  tags?: (string | NewsletterTag)[] | null;
  subscriberTags?: {
    docs?: (string | NewsletterTag)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  status?: ('subscribed' | 'unsubscribed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modules".
 */
export interface Module {
  id: string;
  title: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Sequence in course
   */
  order?: number | null;
  moduleContent?:
    | {
        type?: ('PDF' | 'Link' | 'Download') | null;
        url: string;
        description?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resource-block';
      }[]
    | null;
  parentCourse: string | Course;
  lessons: (string | Lesson)[];
  quizzes?: (string | Quiz)[] | null;
  relatedStrategies?: (string | TradingStrategy)[] | null;
  featuredImage?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: string;
  title: string;
  slug: string;
  description: string;
  image: string | Media;
  lessons?: (string | Lesson)[] | null;
  /**
   * Check this if the course is only for premium subscribers.
   */
  premiumOnly?: boolean | null;
  level: 'Beginner' | 'Intermediate' | 'Advanced';
  /**
   * e.g., 4 weeks
   */
  duration?: string | null;
  prerequisites?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  learningOutcomes?:
    | {
        outcome?: string | null;
        id?: string | null;
      }[]
    | null;
  modules: (string | Module)[];
  relatedInstruments?: (string | ForexInstrument)[] | null;
  author: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons".
 */
export interface Lesson {
  id: string;
  title: string;
  slug: string;
  duration?: number | null;
  description?: string | null;
  videoUrl?: string | null;
  quiz?: (string | null) | Quiz;
  objectives?:
    | {
        objective?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Check this if the lesson is only for premium subscribers.
   */
  premiumOnly?: boolean | null;
  parentModule: string | Module;
  relatedInstruments?: (string | ForexInstrument)[] | null;
  relatedNews?: (string | MarketNew)[] | null;
  relatedClasses?: (string | TradingClass)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quizzes".
 */
export interface Quiz {
  id: string;
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  passingScore?: number | null;
  parentModule?: (string | null) | Module;
  relatedLessons?: (string | Lesson)[] | null;
  questions?:
    | {
        question: string;
        options: {
          option: string;
          id?: string | null;
        }[];
        /**
         * Enter the exact text of the correct option.
         */
        correctAnswer: string;
        /**
         * Explain the answer after user clicks on an option.
         */
        explanation?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'multipleChoice';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forex-instruments".
 */
export interface ForexInstrument {
  id: string;
  /**
   * Check if this is an "Asset Class" instrument, e.g., "Currencies"
   */
  isAssetClass?: boolean | null;
  /**
   * Check if this is an "Education Module" instrument, e.g., "Currencies"
   */
  isEducationModule?: boolean | null;
  symbol: string;
  baseCurrency?: string | null;
  quoteCurrency?: string | null;
  instrumentClass?: (string | null) | TradingClass;
  /**
   * Value per pip in USD
   */
  pipValue?: number | null;
  /**
   * In billions USD
   */
  averageDailyVolume?: number | null;
  volatilityRating?: ('Low' | 'Medium' | 'High') | null;
  /**
   * Typical broker spread in pips
   */
  spreadAverage?: number | null;
  bestTradingSessions?: (string | TradingSession)[] | null;
  /**
   * Key economic factors influencing this pair
   */
  majorInfluencers?: string | null;
  /**
   * 30-day historical volatility percentage
   */
  historicalVolatility?: number | null;
  correlatedAssets?: (string | ForexInstrument)[] | null;
  overview: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Key events affecting this pair
   */
  historicalInsights?: string | null;
  /**
   * Risks, rewards, and awe-inspiring potential
   */
  riskProfile?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  educationModules?:
    | (
        | {
            title: string;
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'text-explanation';
          }
        | {
            chartType: 'Line' | 'Candlestick' | 'Bar';
            dataSource: string;
            description?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'chart';
          }
        | {
            videoUrl: string;
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'video-tutorial';
          }
        | {
            question: string;
            options?:
              | {
                  option?: string | null;
                  id?: string | null;
                }[]
              | null;
            correctAnswer: number;
            explanation?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'quiz';
          }
        | {
            title: string;
            scenario: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            outcome?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            lessonsLearned?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'case-study';
          }
      )[]
    | null;
  /**
   * Category of the forex instrument.
   */
  category?: ('Major' | 'Minor' | 'Exotic' | 'Cryptocurrency' | 'Commodity' | 'Index') | null;
  featuredImage: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-classes".
 */
export interface TradingClass {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Key traits like liquidity, volatility
   */
  characteristics?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  examples?:
    | {
        symbol?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Advantages and risks to awe and educate
   */
  prosCons?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  educationModules: (
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'text-explanation';
      }
    | {
        chartType: 'Line' | 'Candlestick' | 'Bar';
        dataSource: string;
        description?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'chart';
      }
    | {
        question: string;
        options?:
          | {
              option?: string | null;
              id?: string | null;
            }[]
          | null;
        correctAnswer: number;
        explanation?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'quiz';
      }
  )[];
  relatedInstruments?: {
    docs?: (string | ForexInstrument)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  featuredImage?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-sessions".
 */
export interface TradingSession {
  id: string;
  name: string;
  slug: string;
  timezone: string;
  kenyaOpenTime: string;
  kenyaCloseTime: string;
  localOpenTime: string;
  localCloseTime: string;
  volatility: 'low' | 'medium' | 'high' | 'very-high';
  majorPairs?:
    | {
        pair: string;
        avgSpread: number;
        id?: string | null;
      }[]
    | null;
  characteristics?:
    | {
        characteristic: string;
        id?: string | null;
      }[]
    | null;
  bestFor?:
    | {
        strategy: string;
        id?: string | null;
      }[]
    | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  author: string | User;
  quiz?: (string | null) | Quiz;
  image?: (string | null) | Media;
  tips?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "market-news".
 */
export interface MarketNew {
  id: string;
  title: string;
  date: string;
  impactLevel: 'Low' | 'Medium' | 'High';
  summary: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  fullContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  categories?: ('Economic Data' | 'Geopolitical' | 'Central Bank' | 'Other')[] | null;
  newsModules?:
    | (
        | {
            title: string;
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            predictions?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'analysis';
          }
        | {
            url: string;
            description?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'source-link';
          }
      )[]
    | null;
  affectedInstruments?: (string | ForexInstrument)[] | null;
  featuredImage?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-strategies".
 */
export interface TradingStrategy {
  id: string;
  name: string;
  /**
   * Catchy title, e.g., "USD/KEP Breakout Scalp for Volatile Sessions"
   */
  title: string;
  /**
   * Check if this is a "Style" strategy, e.g., "USD/KEP Breakout Scalp for Volatile Sessions"
   */
  isStyle?: boolean | null;
  /**
   * Step-by-step breakdown—keep it actionable for MT5 users in Kenya.
   */
  description: string;
  /**
   * Pyschological profile of the trader who uses this strategy. eg what does it take to make it in day trading
   */
  traderProfile?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Primary trading specialty, e.g., "Currency Trades"
   */
  worksOn?: (string | ForexInstrument)[] | null;
  /**
   * Time horizon—e.g., "1-2 years"
   */
  timeHorizon?: string | null;
  /**
   * Trade frequency—e.g., "5-10 trades per week"
   */
  tradeFrequency?: string | null;
  /**
   * What type of analysis do the traders use"
   */
  analysis?: string | null;
  /**
   * Who is this strategy for? e.g., "Newbies"
   */
  whoIsItFor?: string | null;
  /**
   * Risk per trade—crucial for capital protection in our shilling swings.
   */
  riskLevel?: ('low' | 'medium' | 'high') | null;
  /**
   * E.g., "RSI(14), EMA(50)"—modular for easy remixing.
   */
  indicatorsUsed?:
    | {
        indicator: string;
        id?: string | null;
      }[]
    | null;
  timeframe?: ('Scalping (Minutes)' | 'Day Trading (Hours)' | 'Swing (Days)' | 'Position (Weeks+)') | null;
  overview: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  toolsRequired?:
    | {
        type?: ('indicator' | 'chartPattern' | 'candlePattern' | 'forexAccount' | 'platform' | 'other') | null;
        /**
         * Recommended broker for this strategy.
         */
        recommendedBroker?: (string | null) | Broker;
        /**
         * Recommended platform for this strategy.
         */
        Strategyplatforms?: (string | Platform)[] | null;
        tool?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Modular content blocks for strategy details.
   */
  strategyModules?:
    | (
        | {
            stepNumber: number;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            tips?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'strategy-step';
          }
        | {
            scenario: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            entryPoint?: number | null;
            exitPoint?: number | null;
            profitLoss?: number | null;
            analysis?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'example-trade';
          }
        | {
            rule: string;
            explanation?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'risk-management';
          }
      )[]
    | null;
  /**
   * Screenshot of the strategy in action on TradingView.
   */
  chartImage?: (string | null) | Media;
  featuredImage?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brokers".
 */
export interface Broker {
  id: string;
  name: string;
  slug?: string | null;
  logo: string | Media;
  summary: string;
  bestFor: string;
  minDeposit: number;
  fees?:
    | {
        accountType: string;
        avgSpread: string;
        commission: string;
        id?: string | null;
      }[]
    | null;
  pros?:
    | {
        pro: string;
        id?: string | null;
      }[]
    | null;
  cons?:
    | {
        con: string;
        id?: string | null;
      }[]
    | null;
  /**
   * The single most outstanding regulator of the broker
   */
  regulation: string;
  maxLeverage: string;
  yearFounded: number;
  affiliateLink: string;
  paymentMethods?:
    | {
        method?: ('bank_transfer' | 'm_pesa' | 'skrill') | null;
        minDeposit?: number | null;
        fees?: string | null;
        id?: string | null;
      }[]
    | null;
  customerSupport?:
    | (
        | {
            email?: boolean | null;
            phone?: boolean | null;
            liveChat?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'channels';
          }
        | {
            description?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hours';
          }
        | {
            langs?:
              | {
                  lang?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'languages';
          }
      )[]
    | null;
  bonuses?:
    | {
        type?: string | null;
        amount?: number | null;
        terms?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  rating: {
    overall: number;
    fees: number;
    platforms: number;
    support: number;
    trust: number;
  };
  verdict: string;
  fullReview: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  author: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-methods".
 */
export interface PaymentMethod {
  id: string;
  name: string;
  type?: ('mobile_money' | 'card' | 'e_wallet' | 'bank_transfer') | null;
  processingTime?: string | null;
  fees?: string | null;
  currencies?:
    | {
        currency?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources".
 */
export interface Resource {
  id: string;
  title: string;
  type?: ('webinar' | 'ebook' | 'video' | 'academy') | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  url?: string | null;
  qualityRating?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: string;
  content?:
    | (
        | {
            text?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'introduction';
          }
        | {
            pros?:
              | {
                  item?: string | null;
                  id?: string | null;
                }[]
              | null;
            cons?:
              | {
                  item?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'prosCons';
          }
        | {
            text?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'verdict';
          }
        | {
            description?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'dataTables';
          }
      )[]
    | null;
  userRatings?:
    | {
        source?: string | null;
        score?: number | null;
        id?: string | null;
      }[]
    | null;
  faq?:
    | {
        question?: string | null;
        answer?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'questionAnswer';
      }[]
    | null;
  schemaMarkup?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-progress".
 */
export interface UserProgress {
  id: string;
  user: string | User;
  course: string | Course;
  completionPercentage?: number | null;
  lastAccessed?: string | null;
  quizScores?:
    | {
        quiz?: (string | null) | Quiz;
        score?: number | null;
        id?: string | null;
      }[]
    | null;
  completedModules?: (string | Module)[] | null;
  completedLessons?: (string | Lesson)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forex-traders".
 */
export interface ForexTrader {
  id: string;
  /**
   * Full name of the trader, e.g., "John Mwangi"
   */
  name: string;
  /**
   * Check if this trader is featured on the homepage.
   */
  isFeatured?: boolean | null;
  /**
   * Win rate of the trader, e.g., "80%"
   */
  winRate?: string | null;
  /**
   * Performance of the trader, e.g., "+28% YTD"
   */
  performance?: string | null;
  /**
   * Unique URL slug for SEO, e.g., "john-mwangi".
   */
  slug: string;
  /**
   * Professional title, e.g., "Senior Forex Trader"
   */
  title: string;
  /**
   * Primary trading specialty, e.g., "Currency Trades"
   */
  mainSpecialty?: (string | ForexInstrument)[] | null;
  /**
   * Primary trading specialty, e.g., "Currency Trades"
   */
  specialty?: string | null;
  /**
   * Short bio, e.g., "Experienced in currency markets"
   */
  shortBio: string;
  /**
   * A compelling 200-300 word bio highlighting their journey in Kenyas forex scene.
   */
  bio: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * A compelling 200-300 word bio highlighting their journey in Kenyas forex scene.
   */
  mainArticle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Professional headshot or trading setup photo.
   */
  photo: string | Media;
  tradingFrom?: number | null;
  /**
   * Years trading forex—key for credibility.
   */
  experienceYears: number;
  /**
   * Net worth in USD—key for credibility.
   */
  networth: number;
  /**
   * Risk level they are comfortable with.
   */
  riskAppetite?: ('low' | 'medium' | 'high') | null;
  forexBroker?: (string | null) | Broker;
  /**
   * Country of origin, e.g., "Kenya"
   */
  country: string;
  /**
   * tradingStyle is deprecated in favor of style. Primary style—tailored for Kenyan traders juggling MT4 and local brokers.
   */
  tradingStyle?: ('scalper' | 'day' | 'swing' | 'position' | 'other') | null;
  /**
   * List key wins, e.g., "Top 10% in KFC 2023 Challenge".
   */
  achievements?:
    | {
        achievement: string;
        year: number;
        id?: string | null;
      }[]
    | null;
  /**
   * Connect with Kenya's trading community.
   */
  socialLinks?:
    | {
        platform: 'x' | 'linkedin' | 'instagram' | 'facebook' | 'youtube' | 'xmlFeed' | 'other';
        url: string;
        /**
         * Link to the social profile, e.g., "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
         */
        profileUrl?:
          | {
              url: string;
              title?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Link to modular strategies this trader uses.
   */
  strategies?: (string | TradingStrategy)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Define how brokers are evaluated and scored
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "review-criteria".
 */
export interface ReviewCriterion {
  id: string;
  name: string;
  slug?: string | null;
  category:
    | 'safety-regulation'
    | 'trading-conditions'
    | 'platforms-tools'
    | 'deposits-withdrawals'
    | 'customer-service'
    | 'education-research';
  /**
   * Percentage weight in overall score calculation
   */
  weight: number;
  description: string;
  factors?:
    | {
        factor: string;
        importance?: ('critical' | 'important' | 'moderate') | null;
        id?: string | null;
      }[]
    | null;
  methodology: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  author: string | User;
  approved?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions".
 */
export interface Question {
  id: string;
  question: string;
  author: string | User;
  lesson: string | Lesson;
  answered?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  slug: string;
  category: 'Analysis' | 'Tips' | 'News' | 'Trading Sessions' | 'Getting Started';
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  excerpt: string;
  image: string | Media;
  /**
   * Provide 1-2 keywords for image generation hints.
   */
  aiHint?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  author: string | User;
  /**
   * Check this if the post is only for premium subscribers.
   */
  premiumOnly?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-comments".
 */
export interface BlogComment {
  id: string;
  name: string;
  email: string;
  comment: string;
  author?: (string | null) | User;
  post: string | Post;
  approved?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course-reviews".
 */
export interface CourseReview {
  id: string;
  review: string;
  rating: number;
  course: string | Course;
  author: string | User;
  /**
   * This is automatically set based on user enrollment.
   */
  isEnrolled?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug: string;
  contentNode: RichTextBlock[];
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta?: {
    description?: string | null;
    keywords?:
      | {
          keyword: string;
          id?: string | null;
        }[]
      | null;
  };
  status: 'draft' | 'inReview' | 'published';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock".
 */
export interface RichTextBlock {
  sectionTitle: string;
  sectionId: string;
  image: string | Media;
  layoutType: 'left' | 'right';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'rich-text-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "error-logs".
 */
export interface ErrorLog {
  id: string;
  message: string;
  level: 'error' | 'warning' | 'info';
  stack?: string | null;
  url?: string | null;
  userAgent?: string | null;
  userId?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'radio';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    url?: string | null;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'user-profile';
        value: string | UserProfile;
      } | null)
    | ({
        relationTo: 'regulations';
        value: string | Regulation;
      } | null)
    | ({
        relationTo: 'platforms';
        value: string | Platform;
      } | null)
    | ({
        relationTo: 'account-types';
        value: string | AccountType;
      } | null)
    | ({
        relationTo: 'instruments';
        value: string | Instrument;
      } | null)
    | ({
        relationTo: 'newsletter-tags';
        value: string | NewsletterTag;
      } | null)
    | ({
        relationTo: 'subscribers';
        value: string | Subscriber;
      } | null)
    | ({
        relationTo: 'modules';
        value: string | Module;
      } | null)
    | ({
        relationTo: 'payment-methods';
        value: string | PaymentMethod;
      } | null)
    | ({
        relationTo: 'resources';
        value: string | Resource;
      } | null)
    | ({
        relationTo: 'reviews';
        value: string | Review;
      } | null)
    | ({
        relationTo: 'user-progress';
        value: string | UserProgress;
      } | null)
    | ({
        relationTo: 'forex-traders';
        value: string | ForexTrader;
      } | null)
    | ({
        relationTo: 'review-criteria';
        value: string | ReviewCriterion;
      } | null)
    | ({
        relationTo: 'market-news';
        value: string | MarketNew;
      } | null)
    | ({
        relationTo: 'trading-classes';
        value: string | TradingClass;
      } | null)
    | ({
        relationTo: 'trading-strategies';
        value: string | TradingStrategy;
      } | null)
    | ({
        relationTo: 'forex-instruments';
        value: string | ForexInstrument;
      } | null)
    | ({
        relationTo: 'signals';
        value: string | Signal;
      } | null)
    | ({
        relationTo: 'brokers';
        value: string | Broker;
      } | null)
    | ({
        relationTo: 'comments';
        value: string | Comment;
      } | null)
    | ({
        relationTo: 'courses';
        value: string | Course;
      } | null)
    | ({
        relationTo: 'lessons';
        value: string | Lesson;
      } | null)
    | ({
        relationTo: 'quizzes';
        value: string | Quiz;
      } | null)
    | ({
        relationTo: 'questions';
        value: string | Question;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'blog-comments';
        value: string | BlogComment;
      } | null)
    | ({
        relationTo: 'course-reviews';
        value: string | CourseReview;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'trading-sessions';
        value: string | TradingSession;
      } | null)
    | ({
        relationTo: 'error-logs';
        value: string | ErrorLog;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  fullName?: T;
  username?: T;
  profileUrl?: T;
  experienceLevel?: T;
  marketsTraded?: T;
  bio?: T;
  image?: T;
  capital?: T;
  riskTolerance?: T;
  goals?: T;
  signals?: T;
  role?: T;
  subscriptionPlan?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-profile_select".
 */
export interface UserProfileSelect<T extends boolean = true> {
  fullName?: T;
  expertise?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  user?: T;
  bio?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "regulations_select".
 */
export interface RegulationsSelect<T extends boolean = true> {
  authority?: T;
  licenseNumberTemplate?: T;
  protectionLevel?: T;
  description?: T;
  website?: T;
  tier?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "platforms_select".
 */
export interface PlatformsSelect<T extends boolean = true> {
  name?: T;
  developer?: T;
  features?:
    | T
    | {
        chartingTools?:
          | T
          | {
              description?: T;
              id?: T;
              blockName?: T;
            };
        mobileApp?:
          | T
          | {
              available?: T;
              id?: T;
              blockName?: T;
            };
        eaSupport?:
          | T
          | {
              supported?: T;
              id?: T;
              blockName?: T;
            };
      };
  prosCons?:
    | T
    | {
        pros?:
          | T
          | {
              list?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        cons?:
          | T
          | {
              list?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  screenshots?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "account-types_select".
 */
export interface AccountTypesSelect<T extends boolean = true> {
  name?: T;
  minDeposit?: T;
  leverage?: T;
  spreads?: T;
  commission?: T;
  swapFree?: T;
  details?: T;
  rating?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instruments_select".
 */
export interface InstrumentsSelect<T extends boolean = true> {
  category?: T;
  examples?:
    | T
    | {
        example?: T;
        id?: T;
      };
  count?: T;
  marginRequirements?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-tags_select".
 */
export interface NewsletterTagsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  subscribers?: T;
  source?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscribers_select".
 */
export interface SubscribersSelect<T extends boolean = true> {
  email?: T;
  name?: T;
  source?: T;
  tags?: T;
  subscriberTags?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modules_select".
 */
export interface ModulesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  order?: T;
  moduleContent?:
    | T
    | {
        'resource-block'?:
          | T
          | {
              type?: T;
              url?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
      };
  parentCourse?: T;
  lessons?: T;
  quizzes?: T;
  relatedStrategies?: T;
  featuredImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-methods_select".
 */
export interface PaymentMethodsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  processingTime?: T;
  fees?: T;
  currencies?:
    | T
    | {
        currency?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources_select".
 */
export interface ResourcesSelect<T extends boolean = true> {
  title?: T;
  type?: T;
  description?: T;
  url?: T;
  qualityRating?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  content?:
    | T
    | {
        introduction?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        prosCons?:
          | T
          | {
              pros?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              cons?:
                | T
                | {
                    item?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        verdict?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        dataTables?:
          | T
          | {
              description?: T;
              id?: T;
              blockName?: T;
            };
      };
  userRatings?:
    | T
    | {
        source?: T;
        score?: T;
        id?: T;
      };
  faq?:
    | T
    | {
        questionAnswer?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
              blockName?: T;
            };
      };
  schemaMarkup?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-progress_select".
 */
export interface UserProgressSelect<T extends boolean = true> {
  user?: T;
  course?: T;
  completionPercentage?: T;
  lastAccessed?: T;
  quizScores?:
    | T
    | {
        quiz?: T;
        score?: T;
        id?: T;
      };
  completedModules?: T;
  completedLessons?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forex-traders_select".
 */
export interface ForexTradersSelect<T extends boolean = true> {
  name?: T;
  isFeatured?: T;
  winRate?: T;
  performance?: T;
  slug?: T;
  title?: T;
  mainSpecialty?: T;
  specialty?: T;
  shortBio?: T;
  bio?: T;
  mainArticle?: T;
  photo?: T;
  tradingFrom?: T;
  experienceYears?: T;
  networth?: T;
  riskAppetite?: T;
  forexBroker?: T;
  country?: T;
  tradingStyle?: T;
  achievements?:
    | T
    | {
        achievement?: T;
        year?: T;
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        profileUrl?:
          | T
          | {
              url?: T;
              title?: T;
              id?: T;
            };
        id?: T;
      };
  strategies?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "review-criteria_select".
 */
export interface ReviewCriteriaSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  category?: T;
  weight?: T;
  description?: T;
  factors?:
    | T
    | {
        factor?: T;
        importance?: T;
        id?: T;
      };
  methodology?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "market-news_select".
 */
export interface MarketNewsSelect<T extends boolean = true> {
  title?: T;
  date?: T;
  impactLevel?: T;
  summary?: T;
  fullContent?: T;
  categories?: T;
  newsModules?:
    | T
    | {
        analysis?:
          | T
          | {
              title?: T;
              content?: T;
              predictions?: T;
              id?: T;
              blockName?: T;
            };
        'source-link'?:
          | T
          | {
              url?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
      };
  affectedInstruments?: T;
  featuredImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-classes_select".
 */
export interface TradingClassesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  characteristics?: T;
  examples?:
    | T
    | {
        symbol?: T;
        id?: T;
      };
  prosCons?: T;
  educationModules?:
    | T
    | {
        'text-explanation'?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        chart?:
          | T
          | {
              chartType?: T;
              dataSource?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        quiz?:
          | T
          | {
              question?: T;
              options?:
                | T
                | {
                    option?: T;
                    id?: T;
                  };
              correctAnswer?: T;
              explanation?: T;
              id?: T;
              blockName?: T;
            };
      };
  relatedInstruments?: T;
  featuredImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-strategies_select".
 */
export interface TradingStrategiesSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  isStyle?: T;
  description?: T;
  traderProfile?: T;
  worksOn?: T;
  timeHorizon?: T;
  tradeFrequency?: T;
  analysis?: T;
  whoIsItFor?: T;
  riskLevel?: T;
  indicatorsUsed?:
    | T
    | {
        indicator?: T;
        id?: T;
      };
  timeframe?: T;
  overview?: T;
  toolsRequired?:
    | T
    | {
        type?: T;
        recommendedBroker?: T;
        Strategyplatforms?: T;
        tool?: T;
        id?: T;
      };
  strategyModules?:
    | T
    | {
        'strategy-step'?:
          | T
          | {
              stepNumber?: T;
              description?: T;
              tips?: T;
              id?: T;
              blockName?: T;
            };
        'example-trade'?:
          | T
          | {
              scenario?: T;
              entryPoint?: T;
              exitPoint?: T;
              profitLoss?: T;
              analysis?: T;
              id?: T;
              blockName?: T;
            };
        'risk-management'?:
          | T
          | {
              rule?: T;
              explanation?: T;
              id?: T;
              blockName?: T;
            };
      };
  chartImage?: T;
  featuredImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forex-instruments_select".
 */
export interface ForexInstrumentsSelect<T extends boolean = true> {
  isAssetClass?: T;
  isEducationModule?: T;
  symbol?: T;
  baseCurrency?: T;
  quoteCurrency?: T;
  instrumentClass?: T;
  pipValue?: T;
  averageDailyVolume?: T;
  volatilityRating?: T;
  spreadAverage?: T;
  bestTradingSessions?: T;
  majorInfluencers?: T;
  historicalVolatility?: T;
  correlatedAssets?: T;
  overview?: T;
  historicalInsights?: T;
  riskProfile?: T;
  educationModules?:
    | T
    | {
        'text-explanation'?:
          | T
          | {
              title?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        chart?:
          | T
          | {
              chartType?: T;
              dataSource?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        'video-tutorial'?:
          | T
          | {
              videoUrl?: T;
              caption?: T;
              id?: T;
              blockName?: T;
            };
        quiz?:
          | T
          | {
              question?: T;
              options?:
                | T
                | {
                    option?: T;
                    id?: T;
                  };
              correctAnswer?: T;
              explanation?: T;
              id?: T;
              blockName?: T;
            };
        'case-study'?:
          | T
          | {
              title?: T;
              scenario?: T;
              outcome?: T;
              lessonsLearned?: T;
              id?: T;
              blockName?: T;
            };
      };
  category?: T;
  featuredImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "signals_select".
 */
export interface SignalsSelect<T extends boolean = true> {
  pair?: T;
  type?: T;
  status?: T;
  tradeDetails?:
    | T
    | {
        entryPrice?: T;
        stopLoss?: T;
        takeProfit?: T;
      };
  pips?: T;
  notes?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brokers_select".
 */
export interface BrokersSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  logo?: T;
  summary?: T;
  bestFor?: T;
  minDeposit?: T;
  fees?:
    | T
    | {
        accountType?: T;
        avgSpread?: T;
        commission?: T;
        id?: T;
      };
  pros?:
    | T
    | {
        pro?: T;
        id?: T;
      };
  cons?:
    | T
    | {
        con?: T;
        id?: T;
      };
  regulation?: T;
  maxLeverage?: T;
  yearFounded?: T;
  affiliateLink?: T;
  paymentMethods?:
    | T
    | {
        method?: T;
        minDeposit?: T;
        fees?: T;
        id?: T;
      };
  customerSupport?:
    | T
    | {
        channels?:
          | T
          | {
              email?: T;
              phone?: T;
              liveChat?: T;
              id?: T;
              blockName?: T;
            };
        hours?:
          | T
          | {
              description?: T;
              id?: T;
              blockName?: T;
            };
        languages?:
          | T
          | {
              langs?:
                | T
                | {
                    lang?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  bonuses?:
    | T
    | {
        type?: T;
        amount?: T;
        terms?: T;
        id?: T;
      };
  rating?:
    | T
    | {
        overall?: T;
        fees?: T;
        platforms?: T;
        support?: T;
        trust?: T;
      };
  verdict?: T;
  fullReview?: T;
  author?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  content?: T;
  author?: T;
  approved?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  image?: T;
  lessons?: T;
  premiumOnly?: T;
  level?: T;
  duration?: T;
  prerequisites?: T;
  learningOutcomes?:
    | T
    | {
        outcome?: T;
        id?: T;
      };
  modules?: T;
  relatedInstruments?: T;
  author?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons_select".
 */
export interface LessonsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  duration?: T;
  description?: T;
  videoUrl?: T;
  quiz?: T;
  objectives?:
    | T
    | {
        objective?: T;
        id?: T;
      };
  premiumOnly?: T;
  parentModule?: T;
  relatedInstruments?: T;
  relatedNews?: T;
  relatedClasses?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quizzes_select".
 */
export interface QuizzesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  passingScore?: T;
  parentModule?: T;
  relatedLessons?: T;
  questions?:
    | T
    | {
        multipleChoice?:
          | T
          | {
              question?: T;
              options?:
                | T
                | {
                    option?: T;
                    id?: T;
                  };
              correctAnswer?: T;
              explanation?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions_select".
 */
export interface QuestionsSelect<T extends boolean = true> {
  question?: T;
  author?: T;
  lesson?: T;
  answered?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  excerpt?: T;
  image?: T;
  aiHint?: T;
  content?: T;
  author?: T;
  premiumOnly?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-comments_select".
 */
export interface BlogCommentsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  comment?: T;
  author?: T;
  post?: T;
  approved?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "course-reviews_select".
 */
export interface CourseReviewsSelect<T extends boolean = true> {
  review?: T;
  rating?: T;
  course?: T;
  author?: T;
  isEnrolled?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  contentNode?:
    | T
    | {
        'rich-text-block'?: T | RichTextBlockSelect<T>;
      };
  content?: T;
  meta?:
    | T
    | {
        description?: T;
        keywords?:
          | T
          | {
              keyword?: T;
              id?: T;
            };
      };
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlock_select".
 */
export interface RichTextBlockSelect<T extends boolean = true> {
  sectionTitle?: T;
  sectionId?: T;
  image?: T;
  layoutType?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-sessions_select".
 */
export interface TradingSessionsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  timezone?: T;
  kenyaOpenTime?: T;
  kenyaCloseTime?: T;
  localOpenTime?: T;
  localCloseTime?: T;
  volatility?: T;
  majorPairs?:
    | T
    | {
        pair?: T;
        avgSpread?: T;
        id?: T;
      };
  characteristics?:
    | T
    | {
        characteristic?: T;
        id?: T;
      };
  bestFor?:
    | T
    | {
        strategy?: T;
        id?: T;
      };
  description?: T;
  author?: T;
  quiz?: T;
  image?: T;
  tips?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "error-logs_select".
 */
export interface ErrorLogsSelect<T extends boolean = true> {
  message?: T;
  level?: T;
  stack?: T;
  url?: T;
  userAgent?: T;
  userId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        radio?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Global configuration for Kenya Forex Firm—branding, SEO, and navigation.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config".
 */
export interface SiteConfig {
  id: string;
  /**
   * Main site title for <title> tags and branding.
   */
  siteTitle: string;
  /**
   * Meta description—keep under 160 chars for SEO.
   */
  siteDescription: string;
  /**
   * Base URL for canonicals and OpenGraph.
   */
  siteUrl: string;
  /**
   * Site logo (SVG/PNG, 200x50px ideal).
   */
  logo: string | Media;
  /**
   * Favicon (ICO, 32x32px).
   */
  favicon?: (string | null) | Media;
  /**
   * Primary author for schema.org/Person markup.
   */
  authorName: string;
  /**
   * Short author bio for EEAT signals.
   */
  authorBio: string;
  /**
   * Comma-separated keywords for meta tags.
   */
  keywords: string;
  /**
   * Social profiles for footer and OpenGraph.
   */
  socialMedia?:
    | {
        platform: 'x' | 'linkedin' | 'instagram' | 'youtube';
        /**
         * E.g., @PatrickMahinge
         */
        handle: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Main nav items—use for header menu.
   */
  navigation?:
    | {
        label: string;
        /**
         * Internal: /forex/traders; External: https://example.com
         */
        url: string;
        /**
         * Open in new tab?
         */
        newTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * H1 for homepage hero.
   */
  heroTitle: string;
  /**
   * Subheadline—keep engaging for Kenyan audience.
   */
  heroSubtitle: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Hero banner (1920x1080, forex-themed).
   */
  heroImage: string | Media;
  /**
   * Primary CTA button.
   */
  ctaButtonText: string;
  ctaUrl: string;
  /**
   * Footer copyright notice.
   */
  footerCopyright: string;
  contactPhone?: string | null;
  contactEmail?: string | null;
  address?: {
    street?: string | null;
    city?: string | null;
    postalCode?: string | null;
    country?: string | null;
  };
  /**
   * E.g., Privacy Policy, Terms of Service.
   */
  legalPages?:
    | {
        title: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  disclaimer?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global configuration for Kenya Forex Firm—branding, SEO, and navigation.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "traders-global".
 */
export interface TradersGlobal {
  id: string;
  /**
   * Main site title for <title> tags and branding.
   */
  title: string;
  /**
   * Meta description—keep under 160 chars for SEO.
   */
  description: string;
  /**
   * Base URL for canonicals and OpenGraph.
   */
  pageUrl: string;
  /**
   * Main content area for the traders global section.
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Site logo (SVG/PNG, 200x50px ideal).
   */
  featuredImage: string | Media;
  /**
   * Primary author for schema.org/Person markup.
   */
  authorName: string;
  /**
   * Short author bio for EEAT signals.
   */
  authorBio: string;
  /**
   * Comma-separated keywords for meta tags.
   */
  keywords: string;
  /**
   * H1 for homepage hero.
   */
  heroTitle?: string | null;
  /**
   * Subheadline—keep engaging for Kenyan audience.
   */
  heroSubtitle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Hero banner (1920x1080, forex-themed).
   */
  heroImage?: (string | null) | Media;
  /**
   * Footer copyright notice.
   */
  footerCopyright: string;
  disclaimer?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global configuration for the review criteria that we use to rank forex brokers.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fx-review-criteria".
 */
export interface FxReviewCriterion {
  id: string;
  /**
   * Main site title for <title> tags and branding.
   */
  title: string;
  /**
   * Meta description—keep under 160 chars for SEO.
   */
  description: string;
  /**
   * Base URL for canonicals and OpenGraph.
   */
  pageUrl: string;
  /**
   * Main content area for the traders global section.
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Main featured image for the page.
   */
  featuredImage: string | Media;
  /**
   * Primary author for schema.org/Person markup.
   */
  authorName: string;
  /**
   * Short author bio for EEAT signals.
   */
  authorBio: string;
  /**
   * Comma-separated keywords for meta tags.
   */
  keywords: string;
  /**
   * H1 for homepage hero.
   */
  heroTitle?: string | null;
  /**
   * Subheadline—keep engaging for Kenyan audience.
   */
  heroSubtitle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Hero banner (1920x1080, forex-themed).
   */
  heroImage?: (string | null) | Media;
  /**
   * Footer copyright notice.
   */
  footerCopyright: string;
  disclaimer?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config_select".
 */
export interface SiteConfigSelect<T extends boolean = true> {
  siteTitle?: T;
  siteDescription?: T;
  siteUrl?: T;
  logo?: T;
  favicon?: T;
  authorName?: T;
  authorBio?: T;
  keywords?: T;
  socialMedia?:
    | T
    | {
        platform?: T;
        handle?: T;
        url?: T;
        id?: T;
      };
  navigation?:
    | T
    | {
        label?: T;
        url?: T;
        newTab?: T;
        id?: T;
      };
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  ctaButtonText?: T;
  ctaUrl?: T;
  footerCopyright?: T;
  contactPhone?: T;
  contactEmail?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        postalCode?: T;
        country?: T;
      };
  legalPages?:
    | T
    | {
        title?: T;
        url?: T;
        id?: T;
      };
  disclaimer?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "traders-global_select".
 */
export interface TradersGlobalSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  pageUrl?: T;
  content?: T;
  featuredImage?: T;
  authorName?: T;
  authorBio?: T;
  keywords?: T;
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  footerCopyright?: T;
  disclaimer?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fx-review-criteria_select".
 */
export interface FxReviewCriteriaSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  pageUrl?: T;
  content?: T;
  featuredImage?: T;
  authorName?: T;
  authorBio?: T;
  keywords?: T;
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  footerCopyright?: T;
  disclaimer?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


