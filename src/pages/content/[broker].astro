---

import { Image } from "astro:assets";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from '@/components/ui/breadcrumb';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Check, X, ShieldCheck, ArrowRight } from 'lucide-react';
import StarRating from '@/components/react/brokers/StarRating.astro';
import type { BrokerProps } from '@/types';
import {
    Table,
    TableBody,
    TableCell,
    TableHead,
    TableHeader,
    TableRow,
  } from "@/components/ui/table"
import RichText from '@/components/common/RichText';

export interface Broker {
  id: string;
  name: string;
  slug: string;
  logo: string;
//  logo: string | Media;
  summary: string;
  bestFor: string;
  minDeposit: number;
  regulation: string;
  maxLeverage: string;
  yearFounded: number;
  affiliateLink: string;
  reviewDate?: string | null;
  rating: {
    overall: number;
    fees: number;
    platforms: number;
    support: number;
    trust: number;
  };
  pros?:
    | {
        pro: string;
        id?: string | null;
      }[]
    | null;
  cons?:
    | {
        con: string;
        id?: string | null;
      }[]
    | null;
  fees?:
    | {
        accountType: string;
        avgSpread: string;
        commission: string;
        id?: string | null;
      }[]
    | null;
  verdict: string;
  fullReview: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
 // author: string | User;
  updatedAt: string;
  createdAt: string;
}

export async function getStaticPaths() {
    const res = await fetch('https://fx.mahinge.com/api/brokers');
  const { docs: brokers } = await res.json()
  return brokers.map((broker: Broker) => (
    {
    params: { broker: broker.slug },
    props: { broker } 
}));
}

const { broker } = Astro.props as { broker: Broker };
const brokerLogoUrl = broker.logo;
const jsonLd = {}; // Add your JSON-LD schema here

---
 <div class="bg-background dark:bg-foreground">
       
      <div class="container mx-auto px-4 md:px-6 py-12">
        <Breadcrumb className="mb-8">
          <BreadcrumbList>
            <BreadcrumbItem><BreadcrumbLink asChild><a href="/">Home</a></BreadcrumbLink></BreadcrumbItem>
            <BreadcrumbSeparator />
            <BreadcrumbItem><BreadcrumbLink asChild><a href="/best-forex-brokers">Brokers</a></BreadcrumbLink></BreadcrumbItem>
            <BreadcrumbSeparator />
            <BreadcrumbItem><BreadcrumbPage>{broker.name}</BreadcrumbPage></BreadcrumbItem>
          </BreadcrumbList>
        </Breadcrumb>
        
        <main class="grid lg:grid-cols-12 gap-12">
          <article class="lg:col-span-8">
            <header class="flex items-start gap-6 mb-8">
                <img src={brokerLogoUrl} alt={`${broker.name} Logo`} width={80} height={80} class="rounded-lg shadow-md border" />
                <div>
                    <h1 class="font-display text-4xl font-bold">{broker.name} Review</h1>
                    <p class="mt-2 text-lg text-muted-foreground">{broker.summary}</p>
                    <div class="mt-3 flex items-center gap-2">
                        <StarRating rating={broker.rating.overall} />
                        <span class="font-bold text-muted-foreground">({broker.rating.overall.toFixed(1)})</span>
                    </div>
                </div>
            </header>
            
            <Card className="bg-primary/5 border-primary/20">
                <CardHeader>
                    <CardTitle className="font-display">The Verdict</CardTitle>
                </CardHeader>
                <CardContent>
                     <p class="mb-6">{broker.verdict}</p>
                      <Button asChild size="lg">
                        <a href={broker.affiliateLink} target="_blank" rel="noopener noreferrer nofollow">
                            Visit {broker.name} <ArrowRight className="ml-2"/>
                        </a>
                    </Button>
                </CardContent>
            </Card>

            <section id="pros-cons" class="my-10">
                <div class="grid md:grid-cols-2 gap-8">
                    <div>
                        <h3 class="font-display text-2xl font-bold flex items-center gap-2 mb-4"><Check className="h-8 w-8 text-green-500"/> Pros</h3>
                        <ul class="space-y-2 list-inside">
                            {broker.pros?.map(pro => <li key={pro.id} class="flex items-start gap-2"><Check className="h-5 w-5 text-green-500 mt-1 shrink-0"/><span>{pro.pro}</span></li>)}
                        </ul>
                    </div>
                     <div>
                        <h3 class="font-display text-2xl font-bold flex items-center gap-2 mb-4"><X className="h-8 w-8 text-red-500"/> Cons</h3>
                        <ul class="space-y-2 list-inside">
                            {broker.cons?.map(con => <li key={con.id} class="flex items-start gap-2"><X className="h-5 w-5 text-red-500 mt-1 shrink-0"/><span>{con.con}</span></li>)}
                        </ul>
                    </div>
                </div>
            </section>
            
            <section id="fees" class="my-10">
                 <h2 class="font-display text-3xl font-bold mb-4">Fees & Spreads</h2>
                 <p class="text-muted-foreground mb-6">Understanding the cost of trading is crucial. Here's a breakdown of {broker.name}'s fee structure.</p>
                 <Table>
                    <TableHeader>
                        <TableRow>
                            <TableHead>Account</TableHead>
                            <TableHead>Avg. Spread (EUR/USD)</TableHead>
                            <TableHead>Commission</TableHead>
                        </TableRow>
                    </TableHeader>
                    <TableBody>
                        {broker.fees?.map(fee => (
                            <TableRow key={fee.id}>
                                <TableCell className="font-medium">{fee.accountType}</TableCell>
                                <TableCell>{fee.avgSpread}</TableCell>
                                <TableCell>{fee.commission}</TableCell>
                            </TableRow>
                        ))}
                    </TableBody>
                 </Table>
            </section>
            
            <RichText content={broker.fullReview} />

            {/* TODO: Add Comments Section */}

          </article>
          <aside class="lg:col-span-4 space-y-8">
              <div class="sticky top-24">
                <Card>
                    <CardHeader>
                        <CardTitle>Key Information</CardTitle>
                    </CardHeader>
                    <CardContent className="text-sm space-y-4">
                       <div class="flex justify-between">
                           <span class="text-muted-foreground">Min. Deposit:</span>
                           <span class="font-semibold">${broker.minDeposit}</span>
                       </div>
                        <div class="flex justify-between">
                           <span class="text-muted-foreground">Regulation:</span>
                           <span class="font-semibold">{broker.regulation}</span>
                       </div>
                        <div class="flex justify-between">
                           <span class="text-muted-foreground">Max. Leverage:</span>
                           <span class="font-semibold">{broker.maxLeverage}</span>
                       </div>
                        <div class="flex justify-between">
                           <span class="text-muted-foreground">Year Founded:</span>
                           <span class="font-semibold">{broker.yearFounded}</span>
                       </div>
                    </CardContent>
                </Card>
                 <Card className="mt-8">
                    <CardHeader>
                        <CardTitle className="flex items-center gap-2"><ShieldCheck className="h-6 w-6 text-primary"/>Is {broker.name} Safe?</CardTitle>
                        <CardDescription>Our trust and safety analysis.</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-4">
                        <div class="flex flex-col">
                            <span class="font-semibold">Trust Score</span>
                             <div class="flex items-center gap-2">
                                <StarRating rating={broker.rating.trust} />
                                <span class="font-bold text-sm">({broker.rating.trust.toFixed(1)}/5.0)</span>
                            </div>
                        </div>
                        <p class="text-sm text-muted-foreground">
                            {broker.name} is regulated by top-tier authorities like the {broker.regulation}, ensuring a high level of client fund protection and operational transparency.
                        </p>
                    </CardContent>
                </Card>
                <div class="mt-8">
                    <Button asChild className="w-full" size="lg">
                         <a href={broker.affiliateLink} target="_blank" rel="noopener noreferrer nofollow">
                            Open Account with {broker.name}
                        </a>
                    </Button>
                </div>
              </div>
          </aside>
        </main>
      </div>
    </div>
  