---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import { site } from '../data/site';

const schemaData = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": "Forex Broker Reviews - Kenya",
  "description": "Comprehensive reviews and rankings of forex brokers available to Kenyan traders",
  "url": new URL(Astro.request.url),
  "mainEntity": {
    "@type": "ItemList",
    "numberOfItems": 15,
    "itemListElement": []
  }
};

const brokers = [
  {
    id: 1,
    name: "XM Group",
    logo: "üèõÔ∏è",
    rating: 4.8,
    regulation: ["CySEC", "ASIC", "IFSC"],
    minDeposit: 5,
    maxLeverage: "888:1",
    spread: 0.6,
    platforms: ["MT4", "MT5", "WebTrader"],
    features: ["CMA Approved", "Kenyan Support", "Mobile Trading", "Copy Trading", "Demo Account"],
    accountTypes: ["Micro", "Standard", "XM Zero"],
    paymentMethods: ["M-Pesa", "Bank Transfer", "Credit Card", "Skrill"],
    languages: ["English", "Swahili"],
    founded: 2009,
    headquarters: "Cyprus",
    cmaApproved: true,
    bonusAvailable: true,
    islamicAccount: true,
    category: "established"
  },
  {
    id: 2,
    name: "AvaTrade",
    logo: "üöÄ",
    rating: 4.6,
    regulation: ["CBI", "ASIC", "FSA"],
    minDeposit: 100,
    maxLeverage: "400:1",
    spread: 0.9,
    platforms: ["MT4", "MT5", "AvaTradeGO", "WebTrader"],
    features: ["Copy Trading", "Demo Account", "Educational Tools", "Social Trading"],
    accountTypes: ["Standard", "Professional", "Islamic"],
    paymentMethods: ["M-Pesa", "Bank Transfer", "Credit Card", "PayPal"],
    languages: ["English"],
    founded: 2006,
    headquarters: "Ireland",
    cmaApproved: false,
    bonusAvailable: true,
    islamicAccount: true,
    category: "established"
  },
  {
    id: 3,
    name: "HotForex",
    logo: "üî•",
    rating: 4.5,
    regulation: ["CySEC", "FCA", "DFSA"],
    minDeposit: 5,
    maxLeverage: "1000:1",
    spread: 1.0,
    platforms: ["MT4", "MT5", "HotForex App"],
    features: ["Zero Spread", "Bonus Programs", "Local Payment", "VPS Hosting"],
    accountTypes: ["Micro", "Premium", "Zero Spread", "Auto"],
    paymentMethods: ["M-Pesa", "Bank Transfer", "Skrill", "Neteller"],
    languages: ["English"],
    founded: 2010,
    headquarters: "Cyprus",
    cmaApproved: false,
    bonusAvailable: true,
    islamicAccount: true,
    category: "established"
  },
  {
    id: 4,
    name: "Exness",
    logo: "‚ö°",
    rating: 4.7,
    regulation: ["CySEC", "FCA", "FSA"],
    minDeposit: 1,
    maxLeverage: "Unlimited",
    spread: 0.3,
    platforms: ["MT4", "MT5", "Exness Terminal"],
    features: ["Unlimited Leverage", "Instant Withdrawals", "Professional Trading"],
    accountTypes: ["Standard", "Pro", "Zero", "Raw Spread"],
    paymentMethods: ["M-Pesa", "Bank Transfer", "Perfect Money", "Cryptocurrency"],
    languages: ["English"],
    founded: 2008,
    headquarters: "Cyprus",
    cmaApproved: false,
    bonusAvailable: false,
    islamicAccount: true,
    category: "professional"
  },
  {
    id: 5,
    name: "Pepperstone",
    logo: "üå∂Ô∏è",
    rating: 4.4,
    regulation: ["ASIC", "FCA", "CySEC"],
    minDeposit: 200,
    maxLeverage: "500:1",
    spread: 0.8,
    platforms: ["MT4", "MT5", "cTrader", "TradingView"],
    features: ["Raw Spreads", "Professional Tools", "Advanced Analytics"],
    accountTypes: ["Standard", "Razor", "Swap-Free"],
    paymentMethods: ["Bank Transfer", "Credit Card", "PayPal", "Skrill"],
    languages: ["English"],
    founded: 2010,
    headquarters: "Australia",
    cmaApproved: false,
    bonusAvailable: false,
    islamicAccount: true,
    category: "professional"
  },
  {
    id: 6,
    name: "IC Markets",
    logo: "üìà",
    rating: 4.6,
    regulation: ["ASIC", "CySEC", "FSA"],
    minDeposit: 200,
    maxLeverage: "500:1",
    spread: 0.0,
    platforms: ["MT4", "MT5", "cTrader"],
    features: ["ECN Trading", "Raw Spreads", "Copy Trading", "VPS"],
    accountTypes: ["Standard", "Raw Spread", "cTrader"],
    paymentMethods: ["Bank Transfer", "Credit Card", "Skrill", "Neteller"],
    languages: ["English"],
    founded: 2007,
    headquarters: "Australia",
    cmaApproved: false,
    bonusAvailable: false,
    islamicAccount: true,
    category: "professional"
  }
];
---

<BaseLayout
  title={`Best Forex Brokers in ${site.address.country} (${site.currentYear}) - Expert Reviews & Rankings`}
  description={`Compare the top forex brokers available to ${site.address.country}n traders. Expert reviews, regulation info, spreads, and features to help you choose the best broker for trading.`}
  schemaData={schemaData}
>
  <Navigation />

  <!-- Header Section -->
  <section class="pt-24 pb-12 bg-gradient-to-br from-neutral-950 via-neutral-900 to-neutral-950">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-5xl font-display font-bold text-white mb-4">
          Best
          <span class="bg-gradient-to-r from-primary-400 to-accent-400 bg-clip-text text-transparent">
            Forex Brokers
          </span>
          in Kenya
        </h1>
        <p class="text-xl text-neutral-300 max-w-3xl mx-auto">
          Compare the top-rated forex brokers available to Kenyan traders. Our expert analysis covers
          regulation, spreads, platforms, and features to help you make informed decisions.
        </p>
      </div>

      <!-- Filter and Search Controls -->
      <div class="bg-gradient-to-r from-neutral-800/50 to-neutral-900/50 backdrop-blur-sm rounded-2xl p-6 border border-neutral-700/50 mb-8">
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
          <!-- Search -->
          <div class="lg:col-span-2">
            <label class="block text-sm font-medium text-neutral-300 mb-2">Search Brokers</label>
            <input
              type="text"
              id="brokerSearch"
              placeholder="Search by name, regulation, or features..."
              class="w-full bg-neutral-800/50 border border-neutral-600 rounded-lg px-4 py-2 text-white placeholder-neutral-400 focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            >
          </div>

          <!-- Regulation Filter -->
          <div>
            <label class="block text-sm font-medium text-neutral-300 mb-2">Regulation</label>
            <select
              id="regulationFilter"
              class="w-full bg-neutral-800/50 border border-neutral-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            >
              <option value="">All Regulators</option>
              <option value="cma-approved">CMA Approved Only</option>
              <option value="cysec">CySEC</option>
              <option value="asic">ASIC</option>
              <option value="fca">FCA</option>
            </select>
          </div>

          <!-- Min Deposit Filter -->
          <div>
            <label class="block text-sm font-medium text-neutral-300 mb-2">Min Deposit</label>
            <select
              id="depositFilter"
              class="w-full bg-neutral-800/50 border border-neutral-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            >
              <option value="">Any Amount</option>
              <option value="0-10">$1 - $10</option>
              <option value="10-100">$10 - $100</option>
              <option value="100-500">$100 - $500</option>
              <option value="500+">$500+</option>
            </select>
          </div>
        </div>

        <div class="grid md:grid-cols-3 gap-4">
          <!-- Platform Filter -->
          <div>
            <label class="block text-sm font-medium text-neutral-300 mb-2">Trading Platform</label>
            <select
              id="platformFilter"
              class="w-full bg-neutral-800/50 border border-neutral-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            >
              <option value="">All Platforms</option>
              <option value="mt4">MetaTrader 4</option>
              <option value="mt5">MetaTrader 5</option>
              <option value="ctrader">cTrader</option>
              <option value="webtrader">WebTrader</option>
            </select>
          </div>

          <!-- Account Type Filter -->
          <div>
            <label class="block text-sm font-medium text-neutral-300 mb-2">Account Features</label>
            <select
              id="featuresFilter"
              class="w-full bg-neutral-800/50 border border-neutral-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            >
              <option value="">All Features</option>
              <option value="islamic">Islamic Account</option>
              <option value="bonus">Bonus Available</option>
              <option value="mpesa">M-Pesa Support</option>
              <option value="copy-trading">Copy Trading</option>
            </select>
          </div>

          <!-- Sort Options -->
          <div>
            <label class="block text-sm font-medium text-neutral-300 mb-2">Sort By</label>
            <select
              id="sortFilter"
              class="w-full bg-neutral-800/50 border border-neutral-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            >
              <option value="rating">Highest Rated</option>
              <option value="spread">Lowest Spread</option>
              <option value="deposit">Lowest Min Deposit</option>
              <option value="leverage">Highest Leverage</option>
            </select>
          </div>
        </div>

        <!-- Quick Filters -->
        <div class="mt-6 pt-6 border-t border-neutral-700/50">
          <p class="text-sm font-medium text-neutral-300 mb-3">Quick Filters:</p>
          <div class="flex flex-wrap gap-2">
            <button class="quick-filter bg-neutral-700/50 hover:bg-primary-600 text-neutral-300 hover:text-white px-3 py-1 rounded-full text-sm transition-colors duration-300" data-filter="cma-approved">
              CMA Approved
            </button>
            <button class="quick-filter bg-neutral-700/50 hover:bg-primary-600 text-neutral-300 hover:text-white px-3 py-1 rounded-full text-sm transition-colors duration-300" data-filter="low-deposit">
              Low Min Deposit
            </button>
            <button class="quick-filter bg-neutral-700/50 hover:bg-primary-600 text-neutral-300 hover:text-white px-3 py-1 rounded-full text-sm transition-colors duration-300" data-filter="mpesa">
              M-Pesa Support
            </button>
            <button class="quick-filter bg-neutral-700/50 hover:bg-primary-600 text-neutral-300 hover:text-white px-3 py-1 rounded-full text-sm transition-colors duration-300" data-filter="islamic">
              Islamic Accounts
            </button>
            <button class="quick-filter bg-neutral-700/50 hover:bg-primary-600 text-neutral-300 hover:text-white px-3 py-1 rounded-full text-sm transition-colors duration-300" data-filter="professional">
              Professional Trading
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Broker Listings -->
  <section class="py-12 bg-gradient-to-b from-neutral-950 to-neutral-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Results Summary -->
      <div class="mb-8 flex items-center justify-between">
        <p class="text-neutral-400">
          <span id="resultsCount">{brokers.length}</span> brokers found
        </p>
        <div class="flex items-center space-x-4">
          <button id="gridView" class="p-2 text-neutral-400 hover:text-primary-400 transition-colors duration-300">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
            </svg>
          </button>
          <button id="listView" class="p-2 text-primary-400 transition-colors duration-300">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>

      <!-- Broker Cards -->
      <div id="brokerGrid" class="space-y-6">
        {brokers.map((broker, index) => (
          <div class="broker-card group bg-gradient-to-r from-neutral-800/30 to-neutral-900/30 backdrop-blur-sm rounded-2xl border border-neutral-700/50 hover:border-primary-500/50 transition-all duration-500 overflow-hidden"
               data-broker-id={broker.id}
               data-rating={broker.rating}
               data-spread={broker.spread}
               data-deposit={broker.minDeposit}
               data-regulation={broker.regulation.join(' ').toLowerCase()}
               data-platforms={broker.platforms.join(' ').toLowerCase()}
               data-features={broker.features.join(' ').toLowerCase()}
               data-cma={broker.cmaApproved}
               data-bonus={broker.bonusAvailable}
               data-islamic={broker.islamicAccount}
               data-category={broker.category}>

            <div class="p-6">
              <!-- Header -->
              <div class="flex items-start justify-between mb-6">
                <div class="flex items-center">
                  <div class="w-16 h-16 bg-gradient-to-r from-primary-500 to-accent-500 rounded-2xl flex items-center justify-center text-3xl mr-4 group-hover:scale-110 transition-transform duration-300">
                    {broker.logo}
                  </div>
                  <div>
                    <h3 class="text-2xl font-bold text-white mb-1">{broker.name}</h3>
                    <div class="flex items-center mb-2">
                      <div class="flex text-yellow-400 mr-2">
                        {"‚òÖ".repeat(Math.floor(broker.rating))}
                      </div>
                      <span class="text-neutral-400 text-sm">{broker.rating}/5</span>
                      {broker.cmaApproved && (
                        <span class="ml-3 bg-green-500/20 text-green-400 px-2 py-1 rounded-full text-xs font-medium">
                          CMA Approved
                        </span>
                      )}
                    </div>
                    <div class="flex items-center space-x-4 text-sm text-neutral-400">
                      <span>Est. {broker.founded}</span>
                      <span>‚Ä¢</span>
                      <span>{broker.headquarters}</span>
                    </div>
                  </div>
                </div>
                <div class="text-right">
                  <div class="bg-primary-500/20 text-primary-400 px-3 py-1 rounded-full text-sm font-medium mb-2">
                    #{index + 1}
                  </div>
                  <div class="text-neutral-400 text-sm">
                    Since {broker.founded}
                  </div>
                </div>
              </div>

              <!-- Key Stats -->
              <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                <div class="bg-neutral-800/30 rounded-lg p-3 text-center">
                  <div class="text-sm text-neutral-400 mb-1">Min Deposit</div>
                  <div class="text-lg font-semibold text-white">${broker.minDeposit}</div>
                </div>
                <div class="bg-neutral-800/30 rounded-lg p-3 text-center">
                  <div class="text-sm text-neutral-400 mb-1">Avg Spread</div>
                  <div class="text-lg font-semibold text-white">{broker.spread} pips</div>
                </div>
                <div class="bg-neutral-800/30 rounded-lg p-3 text-center">
                  <div class="text-sm text-neutral-400 mb-1">Max Leverage</div>
                  <div class="text-lg font-semibold text-white">{broker.maxLeverage}</div>
                </div>
                <div class="bg-neutral-800/30 rounded-lg p-3 text-center">
                  <div class="text-sm text-neutral-400 mb-1">Platforms</div>
                  <div class="text-lg font-semibold text-white">{broker.platforms.length}+</div>
                </div>
              </div>

              <!-- Regulation & Features -->
              <div class="grid md:grid-cols-2 gap-6 mb-6">
                <div>
                  <h4 class="text-sm font-medium text-neutral-300 mb-2">Regulation</h4>
                  <div class="flex flex-wrap gap-1">
                    {broker.regulation.map(reg => (
                      <span class="bg-neutral-700/50 text-neutral-300 px-2 py-1 rounded text-xs">
                        {reg}
                      </span>
                    ))}
                  </div>
                </div>
                <div>
                  <h4 class="text-sm font-medium text-neutral-300 mb-2">Key Features</h4>
                  <div class="flex flex-wrap gap-1">
                    {broker.features.slice(0, 4).map(feature => (
                      <span class="bg-primary-500/20 text-primary-400 px-2 py-1 rounded text-xs">
                        {feature}
                      </span>
                    ))}
                    {broker.features.length > 4 && (
                      <span class="bg-neutral-700/50 text-neutral-400 px-2 py-1 rounded text-xs">
                        +{broker.features.length - 4} more
                      </span>
                    )}
                  </div>
                </div>
              </div>

              <!-- Payment Methods -->
              <div class="mb-6">
                <h4 class="text-sm font-medium text-neutral-300 mb-2">Payment Methods</h4>
                <div class="flex flex-wrap gap-2">
                  {broker.paymentMethods.map(method => (
                    <span class="bg-neutral-800/50 text-neutral-300 px-2 py-1 rounded text-xs border border-neutral-600">
                      {method}
                    </span>
                  ))}
                </div>
              </div>

              <!-- Action Buttons -->
              <div class="flex flex-col sm:flex-row gap-3">
                <a
                  href={`/brokers/${broker.name.toLowerCase().replace(/\s+/g, '-')}`}
                  class="flex-1 bg-gradient-to-r from-primary-600 to-accent-600 hover:from-primary-500 hover:to-accent-500 text-white font-medium py-3 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 text-center"
                >
                  Full Review
                </a>
                <a
                  href="#"
                  class="flex-1 border border-neutral-600 hover:border-primary-400 text-neutral-300 hover:text-primary-400 font-medium py-3 px-4 rounded-lg transition-all duration-300 text-center"
                >
                  Visit Broker
                </a>
                <button class="compare-btn bg-neutral-700/50 hover:bg-accent-600 text-neutral-300 hover:text-white font-medium py-3 px-4 rounded-lg transition-all duration-300"
                        data-broker-id={broker.id}>
                  Compare
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Load More Button -->
      <div class="text-center mt-12">
        <button class="bg-gradient-to-r from-neutral-800 to-neutral-700 hover:from-neutral-700 hover:to-neutral-600 text-white font-medium py-3 px-8 rounded-lg transition-all duration-300 border border-neutral-600 hover:border-primary-500">
          Load More Brokers
        </button>
      </div>
    </div>
  </section>

  <!-- Comparison Tool -->
  <div id="comparisonTool" class="fixed bottom-4 right-4 bg-gradient-to-r from-primary-600 to-accent-600 text-white rounded-lg shadow-lg transition-all duration-300 transform translate-y-full opacity-0">
    <div class="p-4">
      <div class="flex items-center justify-between mb-2">
        <h4 class="font-semibold">Compare Brokers</h4>
        <button id="closeComparison" class="text-white/80 hover:text-white">
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>
      <div id="selectedBrokers" class="mb-3 text-sm">
        0 brokers selected
      </div>
      <button id="compareNow" class="w-full bg-white text-primary-600 font-medium py-2 px-4 rounded transition-colors duration-300 hover:bg-neutral-100" disabled>
        Compare Now
      </button>
    </div>
  </div>

  <style>
    .broker-card.hidden {
      display: none;
    }

    .quick-filter.active {
      background: linear-gradient(to right, rgb(6, 182, 212), rgb(168, 85, 247));
      color: white;
    }
  </style>

  <script>
    // Filtering and search functionality
    const brokerCards = document.querySelectorAll('.broker-card');
    const searchInput = document.getElementById('brokerSearch');
    const regulationFilter = document.getElementById('regulationFilter');
    const depositFilter = document.getElementById('depositFilter');
    const platformFilter = document.getElementById('platformFilter');
    const featuresFilter = document.getElementById('featuresFilter');
    const sortFilter = document.getElementById('sortFilter');
    const quickFilters = document.querySelectorAll('.quick-filter');
    const resultsCount = document.getElementById('resultsCount');
    const comparisonTool = document.getElementById('comparisonTool');
    const selectedBrokers = new Set();

    function filterBrokers() {
      const searchTerm = searchInput?.value.toLowerCase();
      const regulation = regulationFilter?.value;
      const deposit = depositFilter?.value;
      const platform = platformFilter?.value;
      const features = featuresFilter?.value;

      let visibleCount = 0;

      brokerCards.forEach(card => {
        let show = true;

        // Search filter
        if (searchTerm) {
          const brokerName = card.querySelector('h3')?.textContent?.toLowerCase();
          // Assuming 'card' is an HTMLElement
          const brokerFeatures = (card as HTMLElement).dataset.features?.toLowerCase();
          const brokerRegulation = (card as HTMLElement).dataset.regulation?.toLowerCase();


          if (!brokerName?.includes(searchTerm) &&
              !brokerFeatures?.includes(searchTerm) &&
              !brokerRegulation?.includes(searchTerm)) {
            show = false;
          }
        }

        // Regulation filter
        if (regulation && show) {
          if (regulation === 'cma-approved' && card.dataset.cma !== 'true') {
            show = false;
          } else if (regulation !== 'cma-approved' && !card.dataset.regulation.includes(regulation)) {
            show = false;
          }
        }

        // Deposit filter
        if (deposit && show) {
          const minDeposit = parseFloat(card.dataset.deposit);
          const [min, max] = deposit.split('-').map(x => parseFloat(x.replace('+', '')));

          if (deposit === '0-10' && (minDeposit < 0 || minDeposit > 10)) show = false;
          if (deposit === '10-100' && (minDeposit < 10 || minDeposit > 100)) show = false;
          if (deposit === '100-500' && (minDeposit < 100 || minDeposit > 500)) show = false;
          if (deposit === '500+' && minDeposit < 500) show = false;
        }

        // Platform filter
        // Assuming 'card' is an HTMLElement
        if (platform && show) {
          if (!(card as HTMLElement).dataset.platforms?.includes(platform)) {
            show = false;
          }
        }


        // Features filter
        if (features && show) {
          if (features === 'islamic' && card.dataset.islamic !== 'true') show = false;
          if (features === 'bonus' && card.dataset.bonus !== 'true') show = false;
          if (features === 'mpesa' && !card.dataset.features.includes('m-pesa')) show = false;
          if (features === 'copy-trading' && !card.dataset.features.includes('copy trading')) show = false;
        }

        // Show/hide card
        if (show) {
          card.classList.remove('hidden');
          visibleCount++;
        } else {
          card.classList.add('hidden');
        }
      });

      if (resultsCount) {
  resultsCount.textContent = visibleCount.toString();
} else {
  console.error("Element with the specified ID was not found.");
}
    }

    function sortBrokers() {
      const sortBy = sortFilter?.value;
      const container = document.getElementById('brokerGrid');
      const cards = Array.from(brokerCards);

      cards.sort((a, b) => {
        switch (sortBy) {
          case 'rating':
            return parseFloat(b.dataset.rating) - parseFloat(a.dataset.rating);
          case 'spread':
            return parseFloat(a.dataset.spread) - parseFloat(b.dataset.spread);
          case 'deposit':
            return parseFloat(a.dataset.deposit) - parseFloat(b.dataset.deposit);
          case 'leverage':
            // Simple leverage comparison (this could be improved)
            return b.querySelector('[data-leverage]')?.textContent?.localeCompare(a.querySelector('[data-leverage]')?.textContent) || 0;
          default:
            return 0;
        }
      });

      // Re-append sorted cards
      cards.forEach(card => container?.appendChild(card));
    }

    // Event listeners
    searchInput?.addEventListener('input', filterBrokers);
    regulationFilter?.addEventListener('change', filterBrokers);
    depositFilter?.addEventListener('change', filterBrokers);
    platformFilter?.addEventListener('change', filterBrokers);
    featuresFilter?.addEventListener('change', filterBrokers);
    sortFilter?.addEventListener('change', () => {
      sortBrokers();
      filterBrokers();
    });

    // Quick filters
    quickFilters.forEach(button => {
      button.addEventListener('click', () => {
        button.classList.toggle('active');

        const filter = button.dataset.filter;

        // Reset other filters when quick filter is used
        if (button.classList.contains('active')) {
          quickFilters.forEach(otherButton => {
            if (otherButton !== button) {
              otherButton.classList.remove('active');
            }
          });

          // Apply quick filter
          switch (filter) {
            case 'cma-approved':
              regulationFilter.value = 'cma-approved';
              break;
            case 'low-deposit':
              depositFilter.value = '0-10';
              break;
            case 'mpesa':
              featuresFilter.value = 'mpesa';
              break;
            case 'islamic':
              featuresFilter.value = 'islamic';
              break;
            case 'professional':
              // Custom filter for professional brokers
              break;
          }
        } else {
          // Reset filters
          regulationFilter.value = '';
          depositFilter.value = '';
          featuresFilter.value = '';
        }

        filterBrokers();
      });
    });

    // Comparison functionality
    const compareButtons = document.querySelectorAll('.compare-btn');
    const selectedBrokersDisplay = document.getElementById('selectedBrokers');
    const compareNowBtn = document.getElementById('compareNow');

    compareButtons.forEach(button => {
      button.addEventListener('click', () => {
        const brokerId = button.dataset.brokerId;

        if (selectedBrokers.has(brokerId)) {
          selectedBrokers.delete(brokerId);
          button.textContent = 'Compare';
          button.classList.remove('bg-accent-600', 'text-white');
          button.classList.add('bg-neutral-700/50', 'text-neutral-300');
        } else if (selectedBrokers.size < 3) {
          selectedBrokers.add(brokerId);
          button.textContent = 'Remove';
          button.classList.remove('bg-neutral-700/50', 'text-neutral-300');
          button.classList.add('bg-accent-600', 'text-white');
        }

        updateComparisonTool();
      });
    });

    function updateComparisonTool() {
      const count = selectedBrokers.size;
      selectedBrokersDisplay.textContent = `${count} broker${count !== 1 ? 's' : ''} selected`;

      if (count > 0) {
        comparisonTool?.classList.remove('translate-y-full', 'opacity-0');
        compareNowBtn.disabled = count < 2;
      } else {
        comparisonTool?.classList.add('translate-y-full', 'opacity-0');
      }
    }

    document.getElementById('closeComparison')?.addEventListener('click', () => {
      selectedBrokers.clear();
      compareButtons.forEach(button => {
        button.textContent = 'Compare';
        button.classList.remove('bg-accent-600', 'text-white');
        button.classList.add('bg-neutral-700/50', 'text-neutral-300');
      });
      updateComparisonTool();
    });

    compareNowBtn?.addEventListener('click', () => {
      const brokerIds = Array.from(selectedBrokers).join(',');
      window.location.href = `/compare?brokers=${brokerIds}`;
    });
  </script>
</BaseLayout>
