---
export const prerender = false;
import { getCollection } from 'astro:content'; // Not directly used here, but common for content collections
//import { Astro } from 'astro/runtime'; // Not usually needed for simple page setup

// This tells Astro to server-render this page instead of pre-rendering it


interface Destination {
  url: string;
  weight?: number;
  label?: string;
}

interface CloakedLinkData {
  slug: string;
  destinationURLs: Destination[];
  trackingData?: Record<string, any>;
  id: string; // Payload adds an ID
  updatedAt: string;
  createdAt: string;
}

// Get the slug from the URL
const { slug } = Astro.params;
const PAYLOAD_API_URL = 'https://api.kenyaforexfirm.com'; // From your .env file

let redirectUrl: string | null = null;
let foundLinkData: CloakedLinkData | null = null;

if (slug) {
  try {
    // Construct the API URL to fetch the specific cloaked link
    const apiResponse = await fetch(`${PAYLOAD_API_URL}/api/cloaked-links?where[slug][equals]=/go/${slug}`);

    if (apiResponse.ok) {
      const data = await apiResponse.json();

      if (data.docs && data.docs.length > 0) {
        foundLinkData = data.docs[0] as CloakedLinkData;
        const destinations = foundLinkData.destinationURLs;

        if (destinations && destinations.length > 0) {
          // --- Logic to select a destination URL (Weighted Redirect Example) ---
          const totalWeight = destinations.reduce((sum, dest) => sum + (dest.weight || 0), 0);

          if (totalWeight === 0) {
              // Fallback if no weights are defined or all are 0
              const randomIndex = Math.floor(Math.random() * destinations.length);
              redirectUrl = destinations[randomIndex].url;
          } else {
              let randomNumber = Math.random() * totalWeight;
              for (const dest of destinations) {
                if (randomNumber < (dest.weight || 0)) {
                  redirectUrl = dest.url;
                  break;
                }
                randomNumber -= (dest.weight || 0);
              }
              // Fallback if somehow nothing selected (shouldn't happen with correct weights)
              if (!redirectUrl) {
                  redirectUrl = destinations[0].url;
              }
          }
          // --- End selection logic ---

          // --- Server-side Redirection (Recommended for Cloaking) ---
          // Use Astro.redirect for a 302 redirect. This happens on the server before the page renders.
          // This is the most effective way to "cloak" with Astro.
          return Astro.redirect(redirectUrl, 302); // 302 Found (Temporary Redirect)
          // For a permanent redirect, use 301: Astro.redirect(redirectUrl, 301);
          // --- End Server-side Redirection ---

        } else {
          console.warn(`Cloaked link /go/${slug} has no destination URLs.`);
        }
      } else {
        console.warn(`Cloaked link /go/${slug} not found in Payload.`);
      }
    } else {
      console.error(`Error fetching cloaked link data: ${apiResponse.status} ${apiResponse.statusText}`);
    }
  } catch (error) {
    console.error('Error processing cloaked link:', error);
  }
}

// If no redirect happened (e.g., link not found or error), show a 404 page
// You can customize this page or redirect to a generic 404
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Link Not Found</title>
</head>
<body>
    <h1>404 - Link Not Found</h1>
    <p>The link you are looking for does not exist or has expired.</p>
    <p><a href="/">Go to Homepage</a></p>
</body>
</html>