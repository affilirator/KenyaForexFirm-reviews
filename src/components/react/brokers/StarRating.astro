---
import { Star, StarHalf, StarOff } from 'lucide-react';
import { cn } from '@/lib/utils';

interface Props {
  rating: number;
  maxRating?: number;
  className?: string;
  starClassName?: string;
}

const { rating, maxRating = 5, className, starClassName } = Astro.props;

const validRating =
  typeof rating === 'number' && !isNaN(rating) && rating >= 0 ? rating : 0;
const clampedRating = Math.min(validRating, maxRating);

const fullStars = Math.floor(clampedRating);
const halfStar = clampedRating % 1 >= 0.5 ? 1 : 0;
const emptyStars = maxRating - fullStars - halfStar;
---

<div
  class={cn('flex items-center gap-0.5', className)}
  aria-label={`Rating: ${clampedRating} out of ${maxRating} stars`}
>
  {
    Array.from({ length: fullStars }, (_, i) => (
      <Star
        className={cn('h-4 w-4 text-orange-600 fill-current', starClassName)}
      />
    ))
  }
  {
    halfStar === 1 && (
      <StarHalf
        className={cn('h-4 w-4 text-orange-500/60 fill-current', starClassName)}
      />
    )
  }
  {
    Array.from({ length: emptyStars }, (_, i) => (
      <Star
        className={cn('h-4 w-4 text-orange-500/30 fill-current', starClassName)}
      />
    ))
  }
</div>
