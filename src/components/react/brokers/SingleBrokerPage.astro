---
//import { notFound } from 'next/navigation';
//import { Metadata } from 'next';
import Image from 'astro:assets';
//import a from 'next/a';
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from '@/components/ui/breadcrumb';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Check, X, ShieldCheck, ArrowRight } from 'lucide-react';
import StarRating from '@/components/react/brokers/StarRating.astro';
import type { BrokerProps } from '@/types';
import {
    Table,
    TableBody,
    TableCell,
    TableHead,
    TableHeader,
    TableRow,
  } from "@/components/ui/table"
import RichText from '@/components/common/RichText';

interface BrokerPageProps {
  params: {
    slug: string;
  };
}

/**
 * 
 * @param slug 
 * @returns 
 * 
 */




const posts = await fetch('https://fx.mahinge.com/api/brokers')

async function fetchBroker(slug: string): Promise<BrokerProps | null> {
    try {
        const response = await fetch(`${process.env.PAYLOAD_PUBLIC_SERVER_URL}/api/brokers?where[slug][equals]=${slug}&limit=1`, {
           // next: { revalidate: 3600 }
        });
        if (!response.ok) return null;
        const data = await response.json();
        return data.docs[0] || null;
    } catch (error) {
        console.error("Broker fetch error:", error);
        return null;
    }
}

export async function generateStaticParams() {
  try {
    const response = await fetch(`${process.env.PAYLOAD_PUBLIC_SERVER_URL}/api/brokers?limit=100&select=slug`);
    if (!response.ok) return [];
    const data = await response.json();
    return data.docs.map((broker: { slug: string }) => ({ slug: broker.slug }));
  } catch (error) {
    console.error("Static params generation failed:", error);
    return [];
  }
}

export async function generateMetadata({ params }: BrokerProps): Promise<any> {
  const broker = await fetchBroker(params.slug);

  if (!broker) {
    return {};
  }
  
  const brokerLogoUrl = (typeof broker.logo === 'object' && broker.logo.url) ? broker.logo.url : '/images/default-logo.png';

  return {
    title: `${broker.name} Review ${new Date().getFullYear()} | Expert Analysis`,
    description: `In-depth review of ${broker.name}, covering fees, platforms, regulation, and more. Is it the right broker for Kenyan traders?`,
    openGraph: {
      title: `${broker.name} Review`,
      description: broker.summary,
      images: [
        {
          url: brokerLogoUrl,
          width: 200,
          height: 200,
          alt: `${broker.name} Logo`,
        },
      ],
    },
  };
}

export default async function BrokerPage({ params }: BrokerPageProps) {
  const broker = await fetchBroker(params.slug);

  if (!broker) {
    notFound();
  }
  
  const brokerLogoUrl = (typeof broker.logo === 'object' && broker.logo.url) ? broker.logo.url : '/images/default-logo.png';

  const jsonLd = {
    '@context': 'https://schema.org',
    '@type': 'Review',
    itemReviewed: {
      '@type': 'BrokerageAccount',
      name: broker.name,
      image: brokerLogoUrl,
      url: broker.affiliateLink,
    },
    reviewRating: {
      '@type': 'Rating',
      ratingValue: broker.rating.overall.toString(),
      bestRating: '5',
      worstRating: '1',
    },
    author: {
      '@type': 'Person',
      "@id": "https://fx.mahinge.com/patrick-mahinge/#person",
      name: 'Patrick Mahinge',
      url: 'https://fx.mahinge.com/patrick-mahinge',
    },
    publisher: {
      '@type': 'Organization',
      "@id": "https://fx.mahinge.com/#organization",
      name: 'MahingeFX',
      logo: {
        '@type': 'ImageObject',
        "@id": "#logo",
        url: 'https://assets.mahinge.com/logo.png',
      },
    },
    datePublished: broker.reviewDate,
  };
}
---
    <div class="bg-background">
       <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
      />
      <div class="container mx-auto px-4 md:px-6 py-12">
        <Breadcrumb className="mb-8">
          <BreadcrumbList>
            <BreadcrumbItem><BreadcrumbLink asChild><a href="/">Home</a></BreadcrumbLink></BreadcrumbItem>
            <BreadcrumbSeparator />
            <BreadcrumbItem><BreadcrumbLink asChild><a href="/best-forex-brokers">Brokers</a></BreadcrumbLink></BreadcrumbItem>
            <BreadcrumbSeparator />
            <BreadcrumbItem><BreadcrumbPage>{broker.name}</BreadcrumbPage></BreadcrumbItem>
          </BreadcrumbList>
        </Breadcrumb>
        
        <main class="grid lg:grid-cols-12 gap-12">
          <article class="lg:col-span-8">
            <header class="flex items-start gap-6 mb-8">
                <Image src={brokerLogoUrl} alt={`${broker.name} Logo`} width={80} height={80} class="rounded-lg shadow-md border" />
                <div>
                    <h1 class="font-headline text-4xl font-bold">{broker.name} Review</h1>
                    <p class="mt-2 text-lg text-muted-foreground">{broker.summary}</p>
                    <div class="mt-3 flex items-center gap-2">
                        <StarRating rating={broker.rating.overall} />
                        <span class="font-bold text-muted-foreground">({broker.rating.overall.toFixed(1)})</span>
                    </div>
                </div>
            </header>
            
            <Card className="bg-primary/5 border-primary/20">
                <CardHeader>
                    <CardTitle className="font-headline">The Verdict</CardTitle>
                </CardHeader>
                <CardContent>
                     <p class="mb-6">{broker.verdict}</p>
                      <Button asChild size="lg">
                        <a href={broker.affiliateLink} target="_blank" rel="noopener noreferrer nofollow">
                            Visit {broker.name} <ArrowRight className="ml-2"/>
                        </a>
                    </Button>
                </CardContent>
            </Card>

            <section id="pros-cons" class="my-10">
                <div class="grid md:grid-cols-2 gap-8">
                    <div>
                        <h3 class="font-headline text-2xl font-bold flex items-center gap-2 mb-4"><Check class="h-8 w-8 text-green-500"/> Pros</h3>
                        <ul class="space-y-2 list-inside">
                            {broker.pros?.map(pro => <li key={pro.id} class="flex items-start gap-2"><Check class="h-5 w-5 text-green-500 mt-1 shrink-0"/><span>{pro.pro}</span></li>)}
                        </ul>
                    </div>
                     <div>
                        <h3 class="font-headline text-2xl font-bold flex items-center gap-2 mb-4"><X class="h-8 w-8 text-red-500"/> Cons</h3>
                        <ul class="space-y-2 list-inside">
                            {broker.cons?.map(con => <li key={con.id} class="flex items-start gap-2"><X class="h-5 w-5 text-red-500 mt-1 shrink-0"/><span>{con.con}</span></li>)}
                        </ul>
                    </div>
                </div>
            </section>
            
            <section id="fees" class="my-10">
                 <h2 class="font-headline text-3xl font-bold mb-4">Fees & Spreads</h2>
                 <p class="text-muted-foreground mb-6">Understanding the cost of trading is crucial. Here's a breakdown of {broker.name}'s fee structure.</p>
                 <Table>
                    <TableHeader>
                        <TableRow>
                            <TableHead>Account</TableHead>
                            <TableHead>Avg. Spread (EUR/USD)</TableHead>
                            <TableHead>Commission</TableHead>
                        </TableRow>
                    </TableHeader>
                    <TableBody>
                        {broker.fees?.map(fee => (
                            <TableRow key={fee.id}>
                                <TableCell className="font-medium">{fee.accountType}</TableCell>
                                <TableCell>{fee.avgSpread}</TableCell>
                                <TableCell>{fee.commission}</TableCell>
                            </TableRow>
                        ))}
                    </TableBody>
                 </Table>
            </section>
            
            <RichText content={broker.fullReview} />

            {/* TODO: Add Comments Section */}

          </article>
          <aside class="lg:col-span-4 space-y-8">
              <div class="sticky top-24">
                <Card>
                    <CardHeader>
                        <CardTitle>Key Information</CardTitle>
                    </CardHeader>
                    <CardContent className="text-sm space-y-4">
                       <div class="flex justify-between">
                           <span class="text-muted-foreground">Min. Deposit:</span>
                           <span class="font-semibold">${broker.minDeposit}</span>
                       </div>
                        <div class="flex justify-between">
                           <span class="text-muted-foreground">Regulation:</span>
                           <span class="font-semibold">{broker.regulation}</span>
                       </div>
                        <div class="flex justify-between">
                           <span class="text-muted-foreground">Max. Leverage:</span>
                           <span class="font-semibold">{broker.maxLeverage}</span>
                       </div>
                        <div class="flex justify-between">
                           <span class="text-muted-foreground">Year Founded:</span>
                           <span class="font-semibold">{broker.yearFounded}</span>
                       </div>
                    </CardContent>
                </Card>
                 <Card className="mt-8">
                    <CardHeader>
                        <CardTitle className="flex items-center gap-2"><ShieldCheck className="h-6 w-6 text-primary"/>Is {broker.name} Safe?</CardTitle>
                        <CardDescription>Our trust and safety analysis.</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-4">
                        <div class="flex flex-col">
                            <span class="font-semibold">Trust Score</span>
                             <div class="flex items-center gap-2">
                                <StarRating rating={broker.rating.trust} />
                                <span class="font-bold text-sm">({broker.rating.trust.toFixed(1)}/5.0)</span>
                            </div>
                        </div>
                        <p class="text-sm text-muted-foreground">
                            {broker.name} is regulated by top-tier authorities like the {broker.regulation}, ensuring a high level of client fund protection and operational transparency.
                        </p>
                    </CardContent>
                </Card>
                <div class="mt-8">
                    <Button asChild className="w-full" size="lg">
                         <a href={broker.affiliateLink} target="_blank" rel="noopener noreferrer nofollow">
                            Open Account with {broker.name}
                        </a>
                    </Button>
                </div>
              </div>
          </aside>
        </main>
      </div>
    </div>
  