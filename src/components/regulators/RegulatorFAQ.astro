---
// RegulatorFAQ.astro - FAQ section for regulator pages
import RichTextRenderer from './RichTextRenderer.astro';

interface FAQItem {
  question: string;
  answer: any; // Rich text content
}

interface Props {
  sectionTitle: string;
  sectionId: string;
  introduction?: any; // Rich text content
  faqItems: FAQItem[];
}

const { sectionTitle, sectionId, introduction, faqItems = [] } = Astro.props;
const hasFAQs = faqItems && faqItems.length > 0;
---

<section id={sectionId} class="py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-neutral-100 via-neutral-100 to-primary-400/10 scroll-mt-20 relative overflow-hidden">
  <div class="absolute inset-0 bg-cyber-grid bg-[length:30px_30px] opacity-15"></div>
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_bottom_left,rgba(56,189,248,0.15),transparent_50%)]"></div>
  <div class="absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-primary-500 via-accent-500 to-primary-500"></div>
  <div class="max-w-7xl mx-auto relative z-10">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-neutral-900 mb-4 font-display tracking-tight inline-block relative">
        <span class="relative z-10">{sectionTitle}</span>
        <span class="absolute bottom-0 left-0 w-full h-3 bg-primary-400/20 -z-10 transform -rotate-1"></span>
      </h2>
      
      {introduction && (
        <div class="prose prose-lg max-w-3xl mx-auto text-neutral-800">
          <RichTextRenderer content={introduction} />
        </div>
      )}
    </div>
    
    {hasFAQs ? (
      <div class="space-y-5 max-w-4xl mx-auto">
        {faqItems.map((faq, index) => (
          <div class="bg-white/90 backdrop-blur-md rounded-xl shadow-lg overflow-hidden border border-neutral-200 hover:border-primary-500/40 transition-all duration-300 group">
            <button
              class="faq-question w-full text-left px-7 py-5 flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 relative overflow-hidden"
              aria-expanded="false"
              aria-controls={`faq-answer-${index}`}
            >
              <div class="absolute inset-0 bg-[radial-gradient(circle_at_bottom_right,rgba(56,189,248,0.07),transparent_70%)] opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <span class="font-medium text-lg text-neutral-900 relative z-10 flex items-center">
                <span class="w-6 h-6 rounded-full bg-primary-500/10 flex items-center justify-center text-primary-600 mr-3 font-semibold text-sm">
                  Q
                </span>
                {faq.question}
              </span>
              <span class="bg-primary-500/10 rounded-full p-1 text-primary-600 transform transition-transform duration-300 flex-shrink-0 ml-4 relative z-10 group-hover:bg-primary-500/20">
                <svg class="w-5 h-5 transform transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
              </span>
            </button>
            <div 
              id={`faq-answer-${index}`}
              class="faq-answer px-7 pb-6 hidden"
            >
              <div class="prose prose-lg max-w-none pt-4 border-t border-neutral-200 text-neutral-800 relative">
                <div class="absolute left-0 top-4 w-6 h-6 rounded-full bg-accent-500/10 flex items-center justify-center text-accent-600 mr-3 font-semibold text-sm">
                  A
                </div>
                <div class="pl-10">
                  <RichTextRenderer content={faq.answer} />
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    ) : (
      <div class="text-neutral-500 italic p-6 border border-dashed border-neutral-300 rounded-lg text-center bg-white/50 max-w-lg mx-auto">
        No FAQ items available
      </div>
    )}
  </div>
</section>

<script>
  // Handle FAQ accordion functionality
  document.addEventListener('DOMContentLoaded', () => {
    const faqQuestions = document.querySelectorAll('.faq-question');
    
    faqQuestions.forEach((question) => {
      question.addEventListener('click', () => {
        const isExpanded = question.getAttribute('aria-expanded') === 'true';
        const answerId = question.getAttribute('aria-controls');
        const answer = document.getElementById(answerId);
        const icon = question.querySelector('svg');
        
        // Toggle current FAQ
        question.setAttribute('aria-expanded', !isExpanded);
        
        // Animate the answer
        if (isExpanded) {
          // Close the answer with animation
          answer.style.maxHeight = answer.scrollHeight + 'px';
          setTimeout(() => {
            answer.style.maxHeight = '0px';
            answer.style.opacity = '0';
          }, 10);
          setTimeout(() => {
            answer.classList.add('hidden');
            answer.style.maxHeight = '';
            answer.style.opacity = '';
          }, 300);
        } else {
          // Open the answer with animation
          answer.classList.remove('hidden');
          answer.style.maxHeight = '0px';
          answer.style.opacity = '0';
          setTimeout(() => {
            answer.style.maxHeight = answer.scrollHeight + 'px';
            answer.style.opacity = '1';
          }, 10);
          setTimeout(() => {
            answer.style.maxHeight = '';
          }, 300);
        }
        
        // Rotate the icon
        icon.classList.toggle('rotate-180');
      });
    });
  });
</script>

<style>
  .faq-answer {
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    overflow: hidden;
  }
  
  .faq-answer:not(.hidden) {
    display: block;
  }
</style>