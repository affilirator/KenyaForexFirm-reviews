---
interface Props {
  sections?: string[];
}

const {
  sections = [
    'overview',
    'capital-requirement',
    'accounts',
    'platforms',
    'spreads',
    'payments',
    'pros-cons',
  ],
} = Astro.props;

const sectionLabels = {
  overview: 'Overview',
  'capital-requirement': 'Capital Requirement',
  accounts: 'Account Types',
  platforms: 'Platforms',
  spreads: 'Spreads & Fees',
  payments: 'Payments',
  education: 'Education',
  'pros-cons': 'Pros & Cons',
};
---

<section
  class="bg-neutral-900 border-b border-neutral-800/50 sticky top-16 z-40"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <nav class="flex space-x-8 overflow-x-auto py-4">
      {
        sections.map((section, index) => (
          <a
            href={`#${section}`}
            class={`tab-link whitespace-nowrap pb-2 font-medium transition-colors duration-300 ${
              index === 0
                ? 'text-primary-400 border-b-2 border-primary-400'
                : 'text-neutral-400 hover:text-white'
            }`}
          >
            {sectionLabels[section] || section}
          </a>
        ))
      }
    </nav>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tabLinks = document.querySelectorAll('.tab-link');

    function setActiveTab(activeLink) {
      tabLinks.forEach((link) => {
        link.classList.remove('text-primary-400', 'border-primary-400');
        link.classList.add('text-neutral-400');
        link.style.borderColor = 'transparent';
      });

      activeLink.classList.remove('text-neutral-400');
      activeLink.classList.add('text-primary-400');
      activeLink.style.borderColor = 'rgb(56, 189, 248)';
    }

    tabLinks.forEach((link) => {
      link.addEventListener('click', function (e) {
        e.preventDefault();
        setActiveTab(this);

        const targetId = this.getAttribute('href').substring(1);
        const targetElement = document.getElementById(targetId);

        if (targetElement) {
          const offsetTop = targetElement.offsetTop - 120;
          window.scrollTo({
            top: offsetTop,
            behavior: 'smooth',
          });
        }
      });
    });

    const sections = document.querySelectorAll('section[id]');

    function handleScroll() {
      const scrollPos = window.scrollY + 150;

      sections.forEach((section) => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute('id');

        if (scrollPos >= sectionTop && scrollPos < sectionTop + sectionHeight) {
          const activeLink = document.querySelector(`a[href="#${sectionId}"]`);
          if (activeLink) {
            setActiveTab(activeLink);
          }
        }
      });
    }

    window.addEventListener('scroll', handleScroll);
    handleScroll();
  });
</script>
