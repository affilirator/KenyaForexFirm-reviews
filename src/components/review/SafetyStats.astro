---
import type { BrokerProps } from '../../types';
import type { Regulator } from '../../types/regulator';

interface Props {
  brokers: BrokerProps[];
  regulators: Regulator[];
}

const { brokers, regulators } = Astro.props;

// Calculate average safety score
const safetyScores = brokers.map(
  (broker) => broker.catRatings?.safetyAndRegulation?.catScore || 0
);
const averageSafetyScore =
  safetyScores.length > 0
    ? safetyScores.reduce((sum, score) => sum + score, 0) / safetyScores.length
    : 0;

// Count brokers by safety level
const excellentCount = safetyScores.filter((score) => score >= 8).length;
const goodCount = safetyScores.filter(
  (score) => score >= 6 && score < 8
).length;
const limitedCount = safetyScores.filter((score) => score < 6).length;

// Get top regulator
const topRegulator =
  regulators.length > 0
    ? regulators.sort((a, b) => b.trustScore - a.trustScore)[0]
    : null;
---

<div
  class="bg-neutral-800/30 backdrop-blur-sm border border-neutral-700/50 rounded-2xl overflow-hidden"
>
  <div class="p-6">
    <h3 class="text-xl font-bold text-white mb-6">Safety Overview</h3>

    <div class="grid grid-cols-2 sm:grid-cols-4 gap-4 mb-8">
      <div
        class="bg-neutral-800/50 p-4 rounded-xl border border-neutral-700/30"
      >
        <div class="text-xs text-neutral-400 mb-1">Average Safety</div>
        <div class="text-2xl font-bold text-white">
          {averageSafetyScore.toFixed(1)}
        </div>
        <div class="text-xs text-neutral-400 mt-1">Out of 10</div>
      </div>

      <div
        class="bg-neutral-800/50 p-4 rounded-xl border border-neutral-700/30"
      >
        <div class="text-xs text-neutral-400 mb-1">Excellent</div>
        <div class="text-2xl font-bold text-green-400">{excellentCount}</div>
        <div class="text-xs text-neutral-400 mt-1">Brokers</div>
      </div>

      <div
        class="bg-neutral-800/50 p-4 rounded-xl border border-neutral-700/30"
      >
        <div class="text-xs text-neutral-400 mb-1">Good</div>
        <div class="text-2xl font-bold text-yellow-400">{goodCount}</div>
        <div class="text-xs text-neutral-400 mt-1">Brokers</div>
      </div>

      <div
        class="bg-neutral-800/50 p-4 rounded-xl border border-neutral-700/30"
      >
        <div class="text-xs text-neutral-400 mb-1">Limited</div>
        <div class="text-2xl font-bold text-red-400">{limitedCount}</div>
        <div class="text-xs text-neutral-400 mt-1">Brokers</div>
      </div>
    </div>

    {
      topRegulator && (
        <div class="bg-neutral-800/50 p-4 rounded-xl border border-neutral-700/30">
          <div class="text-xs text-neutral-400 mb-2">
            Top Regulatory Authority
          </div>
          <div class="flex items-center gap-3">
            {topRegulator.logo && (
              <img
                src={topRegulator.logo.url}
                alt={topRegulator.name}
                class="w-10 h-10 object-contain bg-white rounded p-1"
              />
            )}
            <div>
              <div class="font-medium text-white">{topRegulator.name}</div>
              <div class="text-xs text-neutral-400">{topRegulator.country}</div>
            </div>
            <div class="ml-auto">
              <span class="bg-yellow-500/20 text-yellow-400 px-2 py-1 rounded text-xs font-medium">
                {topRegulator.trustScore}/100
              </span>
            </div>
          </div>
        </div>
      )
    }
  </div>
</div>
