---
import type { AuthorEducation, AuthorWorkHistory, AuthorAward } from '../../types/author';

interface Props {
  education?: AuthorEducation[];
  workHistory?: AuthorWorkHistory[];
  awards?: AuthorAward[];
  yearsExperience?: number;
}

const { education, workHistory, awards, yearsExperience } = Astro.props;

// Sort education by year (most recent first)
const sortedEducation = education ? [...education].sort((a, b) => b.year - a.year) : [];

// Sort work history by end year (most recent first)
const sortedWorkHistory = workHistory ? [...workHistory].sort((a, b) => b.endYear - a.endYear) : [];

// Sort awards by year (most recent first)
const sortedAwards = awards ? [...awards].sort((a, b) => b.year - a.year) : [];
---

<div class="bg-neutral-800/50 border border-neutral-700/50 rounded-xl overflow-hidden">
  <div class="p-6">
    <h2 class="text-xl font-bold text-white mb-6">Credentials & Experience</h2>
    
    {yearsExperience && (
      <div class="mb-6 bg-primary-500/10 border border-primary-500/20 rounded-lg p-4">
        <div class="flex items-center gap-3">
          <div class="text-3xl font-bold text-primary-400">{yearsExperience}+</div>
          <div class="text-sm text-neutral-300">Years of<br/>Experience</div>
        </div>
      </div>
    )}
    
    {sortedEducation.length > 0 && (
      <div class="mb-6">
        <h3 class="text-lg font-medium text-white mb-3 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path d="M12 14l9-5-9-5-9 5 9 5z" />
            <path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222" />
          </svg>
          Education
        </h3>
        <div class="space-y-4">
          {sortedEducation.map(edu => (
            <div>
              <div class="flex items-center gap-2">
                <div class="text-white font-medium">{edu.degree}</div>
                <div class="text-xs bg-neutral-700/50 px-2 py-0.5 rounded text-neutral-400">{edu.year}</div>
              </div>
              <div class="text-sm text-neutral-300 mt-1">
                <a href={edu.url} target="_blank" rel="noopener noreferrer" class="hover:text-primary-400">
                  {edu.institution}
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
    
    {sortedWorkHistory.length > 0 && (
      <div class="mb-6">
        <h3 class="text-lg font-medium text-white mb-3 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
          Work Experience
        </h3>
        <div class="space-y-4">
          {sortedWorkHistory.map(work => (
            <div>
              <div class="flex items-center gap-2">
                <div class="text-white font-medium">{work.position}</div>
                <div class="text-xs bg-neutral-700/50 px-2 py-0.5 rounded text-neutral-400">
                  {work.startYear} - {work.endYear === 9999 ? 'Present' : work.endYear}
                </div>
              </div>
              <div class="text-sm text-neutral-300 mt-1">{work.company}</div>
              {work.description && (
                <div class="text-xs text-neutral-400 mt-1">{work.description}</div>
              )}
            </div>
          ))}
        </div>
      </div>
    )}
    
    {sortedAwards.length > 0 && (
      <div>
        <h3 class="text-lg font-medium text-white mb-3 flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
          </svg>
          Awards & Recognition
        </h3>
        <div class="space-y-4">
          {sortedAwards.map(award => (
            <div>
              <div class="flex items-center gap-2">
                <div class="text-white font-medium">{award.name}</div>
                <div class="text-xs bg-neutral-700/50 px-2 py-0.5 rounded text-neutral-400">{award.year}</div>
              </div>
              {award.description && (
                <div class="text-sm text-neutral-300 mt-1">{award.description}</div>
              )}
            </div>
          ))}
        </div>
      </div>
    )}
  </div>
</div>